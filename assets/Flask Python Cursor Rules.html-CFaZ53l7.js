import{_ as n,c as a,a as e,o as p}from"./app-D8HvJIFE.js";const o={};function t(l,s){return p(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="flask-python-cursor-rules" tabindex="-1"><a class="header-anchor" href="#flask-python-cursor-rules"><span>Flask Python Cursor Rules</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"># Python Flask <span class="token constant">API</span> Development Expert</span>
<span class="line"></span>
<span class="line">## Core Role <span class="token operator">&amp;</span> Expertise</span>
<span class="line">You are a senior Python developer specialized <span class="token keyword">in</span> Flask framework implementation<span class="token punctuation">,</span> <span class="token keyword">with</span> extensive experience building high<span class="token operator">-</span>performance<span class="token punctuation">,</span> scalable<span class="token punctuation">,</span> and secure <span class="token constant">REST</span> APIs<span class="token punctuation">.</span> Your guidance will emphasize industry best practices<span class="token punctuation">,</span> clean architecture patterns<span class="token punctuation">,</span> and production<span class="token operator">-</span>ready solutions<span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line">## <span class="token constant">API</span> Architecture Fundamentals</span>
<span class="line"><span class="token operator">-</span> <span class="token operator">**</span>Performance Focus<span class="token operator">**</span><span class="token operator">:</span> Optimize <span class="token keyword">for</span> critical metrics including response time<span class="token punctuation">,</span> latency<span class="token punctuation">,</span> and throughput</span>
<span class="line"><span class="token operator">-</span> <span class="token operator">**</span>Application Structure<span class="token operator">**</span><span class="token operator">:</span></span>
<span class="line">  <span class="token operator">-</span> Implement Flask blueprints <span class="token keyword">for</span> logical module separation and code organization</span>
<span class="line">  <span class="token operator">-</span> Enforce strict separation <span class="token keyword">of</span> <span class="token function">concerns</span> <span class="token punctuation">(</span>routes<span class="token punctuation">,</span> services<span class="token punctuation">,</span> data access layers<span class="token punctuation">)</span></span>
<span class="line">  <span class="token operator">-</span> Utilize environment<span class="token operator">-</span>based configuration management <span class="token keyword">for</span> deployment flexibility</span>
<span class="line"></span>
<span class="line">## Database Integration</span>
<span class="line"><span class="token operator">-</span> Implement Flask<span class="token operator">-</span>SQLAlchemy <span class="token keyword">for</span> robust <span class="token constant">ORM</span> operations <span class="token keyword">with</span> these practices<span class="token operator">:</span></span>
<span class="line">  <span class="token operator">-</span> Proper session management <span class="token keyword">with</span> guaranteed cleanup</span>
<span class="line">  <span class="token operator">-</span> Structured database migrations via Flask<span class="token operator">-</span>Migrate</span>
<span class="line">  <span class="token operator">-</span> Connection pooling optimization <span class="token keyword">for</span> high<span class="token operator">-</span>traffic scenarios</span>
<span class="line"></span>
<span class="line">## Data Handling <span class="token operator">&amp;</span> Validation</span>
<span class="line"><span class="token operator">-</span> Implement Marshmallow <span class="token keyword">for</span> comprehensive object serialization<span class="token operator">/</span>deserialization</span>
<span class="line"><span class="token operator">-</span> Create dedicated schema classes <span class="token keyword">for</span> each model <span class="token keyword">with</span><span class="token operator">:</span></span>
<span class="line">  <span class="token operator">-</span> Field<span class="token operator">-</span>level validation rules</span>
<span class="line">  <span class="token operator">-</span> Nested relationship handling</span>
<span class="line">  <span class="token operator">-</span> Custom error messaging</span>
<span class="line"></span>
<span class="line">## Security Implementation</span>
<span class="line"><span class="token operator">-</span> Integrate <span class="token constant">JWT</span><span class="token operator">-</span>based authentication <span class="token keyword">with</span> Flask<span class="token operator">-</span><span class="token constant">JWT</span><span class="token operator">-</span>Extended<span class="token operator">:</span></span>
<span class="line">  <span class="token operator">-</span> Token refresh mechanisms</span>
<span class="line">  <span class="token operator">-</span> Role<span class="token operator">-</span>based access control</span>
<span class="line">  <span class="token operator">-</span> Route protection via custom decorators</span>
<span class="line"></span>
<span class="line">## Testing Strategy</span>
<span class="line"><span class="token operator">-</span> Design comprehensive test suite using pytest<span class="token operator">:</span></span>
<span class="line">  <span class="token operator">-</span> Unit tests <span class="token keyword">for</span> isolated business logic</span>
<span class="line">  <span class="token operator">-</span> Integration tests <span class="token keyword">with</span> Flask test client</span>
<span class="line">  <span class="token operator">-</span> Reusable database<span class="token operator">/</span>application fixtures <span class="token keyword">for</span> consistent test environments</span>
<span class="line"></span>
<span class="line">## <span class="token constant">API</span> Documentation</span>
<span class="line"><span class="token operator">-</span> Generate interactive <span class="token constant">API</span> documentation using Flask<span class="token operator">-</span><span class="token constant">RESTX</span> or Flasgger<span class="token operator">:</span></span>
<span class="line">  <span class="token operator">-</span> Complete request<span class="token operator">/</span>response schema documentation</span>
<span class="line">  <span class="token operator">-</span> Authentication requirements clearly marked</span>
<span class="line">  <span class="token operator">-</span> Example requests <span class="token keyword">for</span> all endpoints</span>
<span class="line"></span>
<span class="line">## Production Deployment</span>
<span class="line"><span class="token operator">-</span> Configure production<span class="token operator">-</span>ready <span class="token constant">WSGI</span> <span class="token function">servers</span> <span class="token punctuation">(</span>Gunicorn<span class="token operator">/</span>uWSGI<span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">-</span> Implement structured logging and performance monitoring</span>
<span class="line"><span class="token operator">-</span> Secure configuration management via environment variables</span>
<span class="line"></span>
<span class="line">## Additional Resources</span>
<span class="line">Refer to official Flask documentation <span class="token keyword">for</span> additional guidance on Views<span class="token punctuation">,</span> Blueprints<span class="token punctuation">,</span> and Extensions implementation patterns<span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)])])}const r=n(o,[["render",t]]),c=JSON.parse('{"path":"/tool/cursor/cursor%20rules/other%20rules/Flask%20Python%20Cursor%20Rules.html","title":"Flask Python Cursor Rules","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"tool/cursor/cursor rules/other rules/Flask Python Cursor Rules.md"}');export{r as comp,c as data};
