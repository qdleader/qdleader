import{_ as o,c as l,a as t,o as a}from"./app-D8HvJIFE.js";const d={};function i(c,e){return a(),l("div",null,[...e[0]||(e[0]=[t('<h1 id="v012-说一哈什么是mvvm" tabindex="-1"><a class="header-anchor" href="#v012-说一哈什么是mvvm"><span>V012-说一哈什么是MVVM</span></a></h1><blockquote><p>MVVM是Model-View-ViewModel缩写，也就是把MVC中的Controller演变成ViewModel。Model层代表数据模型， View代表UI组件，ViewModel是View和Model层的桥梁，数据会绑定到viewModel层并自动将数据渲染到页面中， 视图变化的时候会通知viewModel层更新数据。</p></blockquote><h2 id="mvvm的优点" tabindex="-1"><a class="header-anchor" href="#mvvm的优点"><span>mvvm的优点：</span></a></h2><blockquote><p>低耦合，视图（View）可以独立于Model变化和修改，一个ViewModel可以绑定到不同的”View”上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变。</p></blockquote><blockquote><p>可重用性，可以把一些视图逻辑放在一个ViewModel里面，让很多view重用这段视图逻辑。</p></blockquote><blockquote><p>独立开发，开发人员可以专注于业务逻辑和数据的开发（ViewModel），设计人员可以专注于页面设计，使用Expression Blend可以很容易设计界面并生成xml代码。</p></blockquote><blockquote><p>可测试，界面向来是比较难于测试的，而现在测试可以针对ViewModel来写。</p></blockquote>',7)])])}const V=o(d,[["render",i]]),m=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/vue%E7%AF%87/V012-%E8%AF%B4%E4%B8%80%E5%93%88%E4%BB%80%E4%B9%88%E6%98%AFMVVM.html","title":"V012-说一哈什么是MVVM","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/vue篇/V012-说一哈什么是MVVM.md"}');export{V as comp,m as data};
