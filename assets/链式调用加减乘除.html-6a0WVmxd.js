import{_ as s,c as a,a as p,o as t}from"./app-D8HvJIFE.js";const e={};function c(o,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="链式调用加减乘除" tabindex="-1"><a class="header-anchor" href="#链式调用加减乘除"><span>链式调用加减乘除</span></a></h1><h2 id="请设计一个计算器-counter-类-它能使用加法、减法、乘法、除法的操作-并且有一个能获取结果-get-的方法-并通过可选链式调用而工作。" tabindex="-1"><a class="header-anchor" href="#请设计一个计算器-counter-类-它能使用加法、减法、乘法、除法的操作-并且有一个能获取结果-get-的方法-并通过可选链式调用而工作。"><span>请设计一个计算器（Counter）类，它能使用加法、减法、乘法、除法的操作，并且有一个能获取结果（get）的方法，并通过可选链式调用而工作。</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"></span>
<span class="line"> <span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span></span>
<span class="line">     <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">this</span><span class="token punctuation">.</span>result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">         <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line">     <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result <span class="token operator">+=</span> num<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">         <span class="token keyword">return</span> <span class="token keyword">this</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line">     <span class="token function">sub</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result <span class="token operator">-=</span> num<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">         <span class="token keyword">return</span> <span class="token keyword">this</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line">     <span class="token function">mul</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result <span class="token operator">*=</span> num<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">         <span class="token keyword">return</span> <span class="token keyword">this</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line">     <span class="token function">div</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>result <span class="token operator">/=</span> num<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">         <span class="token keyword">return</span> <span class="token keyword">this</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line">     <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">this</span><span class="token punctuation">.</span>arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">         <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>result</span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"> </span>
<span class="line"> <span class="token keyword">const</span> counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>counter<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mul</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">div</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)])])}const u=s(e,[["render",c]]),i=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E6%89%8B%E5%86%99%E7%B1%BB/%E5%8F%AF%E9%81%87%E5%88%B0%E7%9A%84/%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4.html","title":"链式调用加减乘除","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/js类/手写类/可遇到的/链式调用加减乘除.md"}');export{u as comp,i as data};
