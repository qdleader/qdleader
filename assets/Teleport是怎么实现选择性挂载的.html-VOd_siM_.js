import{_ as s,c as a,a as p,o as e}from"./app-D8HvJIFE.js";const t={};function l(o,n){return e(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="teleport是怎么实现选择性挂载的" tabindex="-1"><a class="header-anchor" href="#teleport是怎么实现选择性挂载的"><span>Teleport是怎么实现选择性挂载的？</span></a></h1><p>Teleport是vue的一个内部组件，类似于React的Portal，它可以让组件渲染在父组件以外的DOM上，主要支持 to和disabled两个参数</p><p>to 必须，Teleport目标挂在的DOM元素。</p><p>disabled 可选，用于禁用Teleport的功能，不会移动到任何位置。</p><p>使用案例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"> <span class="token comment">// index.vue</span></span>
<span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;outer&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>Tooltip <span class="token keyword">with</span> Vue3 Teleport<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>button id<span class="token operator">=</span><span class="token string">&quot;show-modal&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;show&quot;</span><span class="token operator">&gt;</span>显示<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>Teleport to<span class="token operator">=</span><span class="token string">&quot;body&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span>modal <span class="token operator">:</span>show<span class="token operator">=</span><span class="token string">&quot;showModal&quot;</span> @close<span class="token operator">=</span><span class="token string">&quot;hide&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">                <span class="token operator">&lt;</span>template #header<span class="token operator">&gt;</span></span>
<span class="line">                    <span class="token operator">&lt;</span>h3<span class="token operator">&gt;</span>custom modal<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span></span>
<span class="line">                <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line">            <span class="token operator">&lt;</span><span class="token operator">/</span>modal<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>Teleport<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span></span>
<span class="line">   <span class="token keyword">import</span> Modal <span class="token keyword">from</span> <span class="token string">&#39;./Modal.vue&#39;</span></span>
<span class="line">   <span class="token keyword">import</span> <span class="token punctuation">{</span>ref<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line"></span>
<span class="line">   <span class="token keyword">const</span> showModal <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">   <span class="token keyword">const</span> <span class="token function-variable function">show</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">       showModal<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line">   <span class="token keyword">const</span> <span class="token function-variable function">hide</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">       showModal<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Modal.vue</span></span>
<span class="line"><span class="token operator">&lt;</span>template<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>Transition name<span class="token operator">=</span><span class="token string">&quot;modal&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>div v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;show&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;modal-mask&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">       <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;modal-wrapper&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">           <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;modal-container&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">               <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;modal-header&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">               <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">&quot;header&quot;</span><span class="token operator">&gt;</span><span class="token keyword">default</span> header<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span></span>
<span class="line">               <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">               <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;modal-body&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">                   <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">&quot;body&quot;</span><span class="token operator">&gt;</span><span class="token keyword">default</span> body<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span></span>
<span class="line">               <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">               <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;modal-footer&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">                   <span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">&quot;footer&quot;</span><span class="token operator">&gt;</span><span class="token keyword">default</span> footer<span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span></span>
<span class="line">                   <span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;modal-default-button&quot;</span> @click<span class="token operator">=</span><span class="token string">&quot;$emit(&#39;close&#39;)&quot;</span><span class="token operator">&gt;</span>x<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line">               <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">           <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">       <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>Transition<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">import</span> <span class="token punctuation">{</span>defineProps<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span></span>
<span class="line">    <span class="token keyword">const</span> props<span class="token operator">=</span><span class="token function">defineProps</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">show</span><span class="token operator">:</span>Boolean</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>style scoped<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>mask <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">position</span><span class="token operator">:</span> fixed<span class="token punctuation">;</span></span>
<span class="line">        z<span class="token operator">-</span>index<span class="token operator">:</span> <span class="token number">9998</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span></span>
<span class="line">        background<span class="token operator">-</span>color<span class="token operator">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">display</span><span class="token operator">:</span> table<span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">transition</span><span class="token operator">:</span> opacity <span class="token number">0</span><span class="token punctuation">.</span>3s ease<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>wrapper <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">display</span><span class="token operator">:</span> table<span class="token operator">-</span>cell<span class="token punctuation">;</span></span>
<span class="line">        vertical<span class="token operator">-</span>align<span class="token operator">:</span> middle<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>container <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">width</span><span class="token operator">:</span> 300px<span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">padding</span><span class="token operator">:</span> 20px 30px<span class="token punctuation">;</span></span>
<span class="line">        background<span class="token operator">-</span>color<span class="token operator">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line">        border<span class="token operator">-</span>radius<span class="token operator">:</span> 2px<span class="token punctuation">;</span></span>
<span class="line">        box<span class="token operator">-</span>shadow<span class="token operator">:</span> <span class="token number">0</span> 2px 8px <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.33</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">transition</span><span class="token operator">:</span> all <span class="token number">0</span><span class="token punctuation">.</span>3s ease<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>header h3 <span class="token punctuation">{</span></span>
<span class="line">        margin<span class="token operator">-</span>top<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">color</span><span class="token operator">:</span> #42b983<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>body <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">margin</span><span class="token operator">:</span> 20px <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span><span class="token keyword">default</span><span class="token operator">-</span>button <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">float</span><span class="token operator">:</span> right<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>enter<span class="token operator">-</span>from <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>leave<span class="token operator">-</span>to <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>enter<span class="token operator">-</span>from <span class="token punctuation">.</span>modal<span class="token operator">-</span>container<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">.</span>modal<span class="token operator">-</span>leave<span class="token operator">-</span>to <span class="token punctuation">.</span>modal<span class="token operator">-</span>container <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">-</span>webkit<span class="token operator">-</span>transform<span class="token operator">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Teleport的to目标必须已经存在于DOM中，在挂载Teleport前，to目标的元素必须挂载完成，否则会报错。</p><h2 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理"><span>实现原理</span></a></h2><p>Teleport 组件在源码中实现是一个对象，对外提供了几个方法，最主要的是两个 process 和 remove 方法。代码如下：</p><p>代码语言：javascript</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// packages/runtime-core/src/components/Teleport.ts</span></span>
<span class="line"><span class="token keyword">const</span> Teleport <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">__isTeleport</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">process</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> </span>
<span class="line">  isSVG<span class="token punctuation">,</span> optimized<span class="token punctuation">,</span> internals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 创建逻辑</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 更新逻辑</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">remove</span><span class="token punctuation">(</span><span class="token parameter">vnode<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">r</span><span class="token operator">:</span> remove<span class="token punctuation">,</span> <span class="token literal-property property">o</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">remove</span><span class="token operator">:</span> hostRemove <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 删除逻辑</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">move</span><span class="token operator">:</span> moveTeleport<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">hydrate</span><span class="token operator">:</span> hydrateTeleport</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码中，process 方法负责组件的创建和更新逻辑，remove 方法负责组件删除逻辑。</p><h2 id="组件创建" tabindex="-1"><a class="header-anchor" href="#组件创建"><span>组件创建</span></a></h2><p>模版渲染会最后会转换成render函数，再调用createBlock方法，最终组件的创建都会调用 patch 方法。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"> <span class="token comment">// packages/runtime-core/src/renderer.ts</span></span>
<span class="line"> <span class="token keyword">const</span> <span class="token literal-property property">patch</span><span class="token operator">:</span> <span class="token function-variable function">PatchFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token parameter">n1<span class="token punctuation">,</span></span>
<span class="line">    n2<span class="token punctuation">,</span></span>
<span class="line">    container<span class="token punctuation">,</span></span>
<span class="line">    anchor <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    parentComponent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    parentSuspense <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    isSVG <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    slotScopeIds <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    optimized <span class="token operator">=</span> __DEV__ <span class="token operator">&amp;&amp;</span> isHmrUpdating <span class="token operator">?</span> <span class="token boolean">false</span> <span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span>n2<span class="token punctuation">.</span>dynamicChildren</span></span>
<span class="line">  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">    <span class="token comment">// patching &amp; not same type, unmount old tree</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isSameVNodeType</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 如果存在新旧节点, 且新旧节点类型不同，则销毁旧节点</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> type<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> shapeFlag <span class="token punctuation">}</span> <span class="token operator">=</span> n2</span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token literal-property property">Text</span><span class="token operator">:</span></span>
<span class="line">           <span class="token comment">// 处理文本节点</span></span>
<span class="line">           <span class="token keyword">break</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token literal-property property">Comment</span><span class="token operator">:</span></span>
<span class="line">          <span class="token comment">// 处理注释节点</span></span>
<span class="line">          <span class="token keyword">break</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token literal-property property">Static</span><span class="token operator">:</span></span>
<span class="line">         <span class="token comment">// 处理静态节点</span></span>
<span class="line">         <span class="token keyword">break</span></span>
<span class="line">      <span class="token keyword">case</span> <span class="token literal-property property">Fragment</span><span class="token operator">:</span></span>
<span class="line">        <span class="token comment">// 处理 Fragment</span></span>
<span class="line">        <span class="token keyword">break</span></span>
<span class="line">      <span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ELEMENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 处理普通 DOM 元素</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">COMPONENT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 处理组件</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">TELEPORT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 处理 TELEPORT</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>__FEATURE_SUSPENSE__ <span class="token operator">&amp;&amp;</span> shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">SUSPENSE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 处理 SUSPENSE</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Invalid VNode type:&#39;</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">typeof</span> type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，在 patch 阶段，会判断如果 type 是一个 Teleport 组件，则会执行它的 process 方法，接下来我们来看 process 方法关于 Teleport 组件创建部分的逻辑：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// packages/runtime-core/src/components/Teleport.ts</span></span>
<span class="line"><span class="token function">process</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token parameter"><span class="token literal-property property">n1</span><span class="token operator">:</span> TeleportVNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">n2</span><span class="token operator">:</span> TeleportVNode<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">container</span><span class="token operator">:</span> RendererElement<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">anchor</span><span class="token operator">:</span> RendererNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parentComponent</span><span class="token operator">:</span> ComponentInternalInstance <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parentSuspense</span><span class="token operator">:</span> SuspenseBoundary <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">isSVG</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">slotScopeIds</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">optimized</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">internals</span><span class="token operator">:</span> RendererInternals</span></span>
<span class="line">  <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">mc</span><span class="token operator">:</span> mountChildren<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">pc</span><span class="token operator">:</span> patchChildren<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">pbc</span><span class="token operator">:</span> patchBlockChildren<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">o</span><span class="token operator">:</span> <span class="token punctuation">{</span> insert<span class="token punctuation">,</span> querySelector<span class="token punctuation">,</span> createText<span class="token punctuation">,</span> createComment <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token operator">=</span> internals</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> disabled <span class="token operator">=</span> <span class="token function">isTeleportDisabled</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>props<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token punctuation">{</span> shapeFlag<span class="token punctuation">,</span> children<span class="token punctuation">,</span> dynamicChildren <span class="token punctuation">}</span> <span class="token operator">=</span> n2</span>
<span class="line">    <span class="token operator">...</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// insert anchors in the main view</span></span>
<span class="line">      <span class="token comment">// 在主视图里插入注释节点或者空白文本节点</span></span>
<span class="line">      <span class="token keyword">const</span> placeholder <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>el <span class="token operator">=</span> __DEV__</span>
<span class="line">        <span class="token operator">?</span> <span class="token function">createComment</span><span class="token punctuation">(</span><span class="token string">&#39;teleport start&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token operator">:</span> <span class="token function">createText</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> mainAnchor <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>anchor <span class="token operator">=</span> __DEV__</span>
<span class="line">        <span class="token operator">?</span> <span class="token function">createComment</span><span class="token punctuation">(</span><span class="token string">&#39;teleport end&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token operator">:</span> <span class="token function">createText</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">insert</span><span class="token punctuation">(</span>placeholder<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span></span>
<span class="line">      <span class="token function">insert</span><span class="token punctuation">(</span>mainAnchor<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">)</span></span>
<span class="line">      <span class="token comment">// 获取目标移动的 DOM 节点</span></span>
<span class="line">      <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token function">resolveTarget</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>props<span class="token punctuation">,</span> querySelector<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> targetAnchor <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>targetAnchor <span class="token operator">=</span> <span class="token function">createText</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">insert</span><span class="token punctuation">(</span>targetAnchor<span class="token punctuation">,</span> target<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// #2652 we could be teleporting from a non-SVG tree into an SVG tree</span></span>
<span class="line">        isSVG <span class="token operator">=</span> isSVG <span class="token operator">||</span> <span class="token function">isTargetSVG</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>disabled<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 查找不到 target 则报警告</span></span>
<span class="line">        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Invalid Teleport target on mount:&#39;</span><span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">typeof</span> target<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">const</span> <span class="token function-variable function">mount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">container</span><span class="token operator">:</span> RendererElement<span class="token punctuation">,</span> <span class="token literal-property property">anchor</span><span class="token operator">:</span> RendererNode</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 挂载子节点</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">mountChildren</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>disabled<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// disabled 情况就在原先的位置挂载</span></span>
<span class="line">        <span class="token function">mount</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> mainAnchor<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 挂载到 target 的位置</span></span>
<span class="line">        <span class="token function">mount</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> targetAnchor<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span>  </span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Teleport 组件创建部分主要分为三个步骤，第一步在主视图里插入注释节点或者空白文本节点，第二步获取目标元素节点，第三步调用mount方法创建子节点往目标元素插入 Teleport 组件的子节点。</p><h3 id="组件更新" tabindex="-1"><a class="header-anchor" href="#组件更新"><span>组件更新</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// packages/runtime-core/src/components/Teleport.ts</span></span>
<span class="line"> <span class="token function">process</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token parameter"><span class="token literal-property property">n1</span><span class="token operator">:</span> TeleportVNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">n2</span><span class="token operator">:</span> TeleportVNode<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">container</span><span class="token operator">:</span> RendererElement<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">anchor</span><span class="token operator">:</span> RendererNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parentComponent</span><span class="token operator">:</span> ComponentInternalInstance <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parentSuspense</span><span class="token operator">:</span> SuspenseBoundary <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">isSVG</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">slotScopeIds</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">optimized</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">internals</span><span class="token operator">:</span> RendererInternals</span></span>
<span class="line">  <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">mc</span><span class="token operator">:</span> mountChildren<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">pc</span><span class="token operator">:</span> patchChildren<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">pbc</span><span class="token operator">:</span> patchBlockChildren<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">o</span><span class="token operator">:</span> <span class="token punctuation">{</span> insert<span class="token punctuation">,</span> querySelector<span class="token punctuation">,</span> createText<span class="token punctuation">,</span> createComment <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token operator">=</span> internals</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> disabled <span class="token operator">=</span> <span class="token function">isTeleportDisabled</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>props<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> <span class="token punctuation">{</span> shapeFlag<span class="token punctuation">,</span> children<span class="token punctuation">,</span> dynamicChildren <span class="token punctuation">}</span> <span class="token operator">=</span> n2</span>
<span class="line"></span>
<span class="line">    <span class="token comment">// #3302</span></span>
<span class="line">    <span class="token comment">// HMR updated, force full diff</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__ <span class="token operator">&amp;&amp;</span> isHmrUpdating<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      optimized <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">      dynamicChildren <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>n1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 组件创建</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// update content</span></span>
<span class="line">      n2<span class="token punctuation">.</span>el <span class="token operator">=</span> n1<span class="token punctuation">.</span>el</span>
<span class="line">      <span class="token keyword">const</span> mainAnchor <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>anchor <span class="token operator">=</span> n1<span class="token punctuation">.</span>anchor<span class="token punctuation">)</span><span class="token operator">!</span></span>
<span class="line">      <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>target <span class="token operator">=</span> n1<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token operator">!</span></span>
<span class="line">      <span class="token keyword">const</span> targetAnchor <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>targetAnchor <span class="token operator">=</span> n1<span class="token punctuation">.</span>targetAnchor<span class="token punctuation">)</span><span class="token operator">!</span></span>
<span class="line">      <span class="token comment">// 之前是不是 disabled 状态</span></span>
<span class="line">      <span class="token keyword">const</span> wasDisabled <span class="token operator">=</span> <span class="token function">isTeleportDisabled</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>props<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">const</span> currentContainer <span class="token operator">=</span> wasDisabled <span class="token operator">?</span> container <span class="token operator">:</span> target</span>
<span class="line">      <span class="token keyword">const</span> currentAnchor <span class="token operator">=</span> wasDisabled <span class="token operator">?</span> mainAnchor <span class="token operator">:</span> targetAnchor</span>
<span class="line">      isSVG <span class="token operator">=</span> isSVG <span class="token operator">||</span> <span class="token function">isTargetSVG</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span></span>
<span class="line">      <span class="token comment">// 更新子节点</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>dynamicChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// fast path when the teleport happens to be a block root</span></span>
<span class="line">        <span class="token function">patchBlockChildren</span><span class="token punctuation">(</span></span>
<span class="line">          n1<span class="token punctuation">.</span>dynamicChildren<span class="token operator">!</span><span class="token punctuation">,</span></span>
<span class="line">          dynamicChildren<span class="token punctuation">,</span></span>
<span class="line">          currentContainer<span class="token punctuation">,</span></span>
<span class="line">          parentComponent<span class="token punctuation">,</span></span>
<span class="line">          parentSuspense<span class="token punctuation">,</span></span>
<span class="line">          isSVG<span class="token punctuation">,</span></span>
<span class="line">          slotScopeIds</span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">traverseStaticChildren</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>optimized<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">patchChildren</span><span class="token punctuation">(</span></span>
<span class="line">          n1<span class="token punctuation">,</span></span>
<span class="line">          n2<span class="token punctuation">,</span></span>
<span class="line">          currentContainer<span class="token punctuation">,</span></span>
<span class="line">          currentAnchor<span class="token punctuation">,</span></span>
<span class="line">          parentComponent<span class="token punctuation">,</span></span>
<span class="line">          parentSuspense<span class="token punctuation">,</span></span>
<span class="line">          isSVG<span class="token punctuation">,</span></span>
<span class="line">          slotScopeIds<span class="token punctuation">,</span></span>
<span class="line">          <span class="token boolean">false</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>disabled<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>wasDisabled<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 把子节点移动回主容器</span></span>
<span class="line">          <span class="token function">moveTeleport</span><span class="token punctuation">(</span></span>
<span class="line">            n2<span class="token punctuation">,</span></span>
<span class="line">            container<span class="token punctuation">,</span></span>
<span class="line">            mainAnchor<span class="token punctuation">,</span></span>
<span class="line">            internals<span class="token punctuation">,</span></span>
<span class="line">            TeleportMoveTypes<span class="token punctuation">.</span><span class="token constant">TOGGLE</span></span>
<span class="line">          <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 目标元素改变</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> n2<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token punctuation">(</span>n1<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> n1<span class="token punctuation">.</span>props<span class="token punctuation">.</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">const</span> nextTarget <span class="token operator">=</span> <span class="token punctuation">(</span>n2<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token function">resolveTarget</span><span class="token punctuation">(</span></span>
<span class="line">            n2<span class="token punctuation">.</span>props<span class="token punctuation">,</span></span>
<span class="line">            querySelector</span>
<span class="line">          <span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">          <span class="token keyword">if</span> <span class="token punctuation">(</span>nextTarget<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// enabled -&gt; disabled</span></span>
<span class="line">            <span class="token comment">// 移动到新的目标元素</span></span>
<span class="line">            <span class="token function">moveTeleport</span><span class="token punctuation">(</span></span>
<span class="line">              n2<span class="token punctuation">,</span></span>
<span class="line">              nextTarget<span class="token punctuation">,</span></span>
<span class="line">              <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">              internals<span class="token punctuation">,</span></span>
<span class="line">              TeleportMoveTypes<span class="token punctuation">.</span><span class="token constant">TARGET_CHANGE</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>__DEV__<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">warn</span><span class="token punctuation">(</span></span>
<span class="line">              <span class="token string">&#39;Invalid Teleport target on update:&#39;</span><span class="token punctuation">,</span></span>
<span class="line">              target<span class="token punctuation">,</span></span>
<span class="line">              <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">typeof</span> target<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">          <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>wasDisabled<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// disabled -&gt; enabled</span></span>
<span class="line">          <span class="token comment">// 移动到目标元素位置</span></span>
<span class="line">          <span class="token function">moveTeleport</span><span class="token punctuation">(</span></span>
<span class="line">            n2<span class="token punctuation">,</span></span>
<span class="line">            target<span class="token punctuation">,</span></span>
<span class="line">            targetAnchor<span class="token punctuation">,</span></span>
<span class="line">            internals<span class="token punctuation">,</span></span>
<span class="line">            TeleportMoveTypes<span class="token punctuation">.</span><span class="token constant">TOGGLE</span></span>
<span class="line">          <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Teleport 组件更新无非就是做几件事情：更新子节点，处理 disabled 属性变化的情况，处理 to 属性变化的情况。</p><p>首先，是更新 Teleport 组件的子节点，这里更新分为优化更新和普通的全量比对更新两种情况。</p><p>接着，是判断 Teleport 组件新节点配置 disabled 属性的情况，如果满足新节点 disabled 为 true，且旧节点的 disabled 为 false 的话，说明我们需要把 Teleport 的子节点从目标元素内部移回到主视图内部了。</p><p>如果新节点 disabled 为 false，那么先通过 to 属性是否改变来判断目标元素 target 有没有变化，如果有变化，则把 Teleport 的子节点移动到新的 target 内部；如果目标元素没变化，则判断旧节点的 disabled 是否为 true，如果是则把 Teleport 的子节点从主视图内部移动到目标元素内部了。</p><h3 id="组件移除" tabindex="-1"><a class="header-anchor" href="#组件移除"><span>组件移除</span></a></h3><p>当组件移除的时候会执行 unmount 方法，它的内部会判断如果移除的组件是一个 Teleport 组件，就会执行组件的 remove 方法。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"> <span class="token comment">// packages/runtime-core/src/renderer.ts</span></span>
<span class="line"> <span class="token keyword">const</span> <span class="token literal-property property">unmount</span><span class="token operator">:</span> <span class="token function-variable function">UnmountFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token parameter">vnode<span class="token punctuation">,</span></span>
<span class="line">    parentComponent<span class="token punctuation">,</span></span>
<span class="line">    parentSuspense<span class="token punctuation">,</span></span>
<span class="line">    doRemove <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    optimized <span class="token operator">=</span> <span class="token boolean">false</span></span></span>
<span class="line">  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span></span>
<span class="line">      type<span class="token punctuation">,</span></span>
<span class="line">      props<span class="token punctuation">,</span></span>
<span class="line">      ref<span class="token punctuation">,</span></span>
<span class="line">      children<span class="token punctuation">,</span></span>
<span class="line">      dynamicChildren<span class="token punctuation">,</span></span>
<span class="line">      shapeFlag<span class="token punctuation">,</span></span>
<span class="line">      patchFlag<span class="token punctuation">,</span></span>
<span class="line">      dirs</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token operator">=</span> vnode</span>
<span class="line">      <span class="token operator">...</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">TELEPORT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token punctuation">;</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>type <span class="token keyword">as</span> <span class="token keyword">typeof</span> TeleportImpl<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span></span>
<span class="line">          vnode<span class="token punctuation">,</span></span>
<span class="line">          parentComponent<span class="token punctuation">,</span></span>
<span class="line">          parentSuspense<span class="token punctuation">,</span></span>
<span class="line">          optimized<span class="token punctuation">,</span></span>
<span class="line">          internals<span class="token punctuation">,</span></span>
<span class="line">          doRemove</span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span> </span>
<span class="line">      <span class="token operator">...</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，在 unmount 阶段，会判断如果 ShapeFlags 是一个 Teleport 组件，则会执行它的 remove 方法，接下来我们来看 remove 方法关于 Teleport 组件删除逻辑：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// packages/runtime-core/src/components/Teleport.ts</span></span>
<span class="line"> <span class="token function">remove</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token parameter"><span class="token literal-property property">vnode</span><span class="token operator">:</span> VNode<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parentComponent</span><span class="token operator">:</span> ComponentInternalInstance <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">parentSuspense</span><span class="token operator">:</span> SuspenseBoundary <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">optimized</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token literal-property property">um</span><span class="token operator">:</span> unmount<span class="token punctuation">,</span> <span class="token literal-property property">o</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">remove</span><span class="token operator">:</span> hostRemove <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token operator">:</span> RendererInternals<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">doRemove</span><span class="token operator">:</span> Boolean</span></span>
<span class="line">  <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> shapeFlag<span class="token punctuation">,</span> children<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> targetAnchor<span class="token punctuation">,</span> target<span class="token punctuation">,</span> props <span class="token punctuation">}</span> <span class="token operator">=</span> vnode</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">hostRemove</span><span class="token punctuation">(</span>targetAnchor<span class="token operator">!</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// an unmounted teleport should always remove its children if not disabled</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>doRemove <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isTeleportDisabled</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">hostRemove</span><span class="token punctuation">(</span>anchor<span class="token operator">!</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>shapeFlag <span class="token operator">&amp;</span> ShapeFlags<span class="token punctuation">.</span><span class="token constant">ARRAY_CHILDREN</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token punctuation">(</span>children <span class="token keyword">as</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token punctuation">(</span>children <span class="token keyword">as</span> VNode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span></span>
<span class="line">          <span class="token function">unmount</span><span class="token punctuation">(</span></span>
<span class="line">            child<span class="token punctuation">,</span></span>
<span class="line">            parentComponent<span class="token punctuation">,</span></span>
<span class="line">            parentSuspense<span class="token punctuation">,</span></span>
<span class="line">            <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token operator">!</span><span class="token operator">!</span>child<span class="token punctuation">.</span>dynamicChildren</span>
<span class="line">          <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Teleport 的 remove 方法实现很简单，首先通过 hostRemove 移除主视图渲染的锚点 teleport start 注释节点，然后再去遍历 Teleport 的子节点执行 unmount 移除。</p><p>执行完 Teleport 的 unmount 方法，会执行 hostRemove 方法移除 Teleport 主视图的元素 teleport end 注释节点，至此，Teleport 组件完成了移除。</p>`,31)])])}const i=s(t,[["render",l]]),r=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/vue3%E7%AF%87/Teleport%E6%98%AF%E6%80%8E%E4%B9%88%E5%AE%9E%E7%8E%B0%E9%80%89%E6%8B%A9%E6%80%A7%E6%8C%82%E8%BD%BD%E7%9A%84.html","title":"Teleport是怎么实现选择性挂载的？","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/vue3篇/Teleport是怎么实现选择性挂载的.md"}');export{i as comp,r as data};
