import{_ as n,c as s,a as t,o as p}from"./app-D8HvJIFE.js";const e={};function o(c,a){return p(),s("div",null,[...a[0]||(a[0]=[t(`<h1 id="如何让-var-a-b-a-1-b-2-解构赋值成功" tabindex="-1"><a class="header-anchor" href="#如何让-var-a-b-a-1-b-2-解构赋值成功"><span>如何让 var [a, b] = {a: 1, b: 2} 解构赋值成功</span></a></h1><p>我们知道var [a, b] = [1, 2]这是肯定没有问题的，所以我们可以将对象身上的迭代器，打造成和数组身上的迭代器（arr[Symbol.iterator]）一样，代码如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">0</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)])])}const i=n(e,[["render",o]]),r=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E5%85%B6%E4%BB%96%E7%B1%BB/%E5%A6%82%E4%BD%95%E8%AE%A9%20var%20_a_%20b_%20_%20_a_%201_%20b_%202_%20%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC%E6%88%90%E5%8A%9F.html","title":"如何让 var [a, b] = {a: 1, b: 2} 解构赋值成功","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/js类/其他类/如何让 var [a, b] = {a: 1, b: 2} 解构赋值成功.md"}');export{i as comp,r as data};
