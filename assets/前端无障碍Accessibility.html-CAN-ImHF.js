import{_ as a,c as n,a as e,o as t}from"./app-D8HvJIFE.js";const p={};function o(l,s){return t(),n("div",null,[...s[0]||(s[0]=[e(`<h1 id="前端无障碍accessibility" tabindex="-1"><a class="header-anchor" href="#前端无障碍accessibility"><span>前端无障碍Accessibility</span></a></h1><h2 id="什么是无障碍" tabindex="-1"><a class="header-anchor" href="#什么是无障碍"><span>什么是无障碍</span></a></h2><p>无障碍是指让所有人都可以使用网站或应用，包括残疾人士。无障碍性是网站或应用的一个特性，它使得网站或应用可以被所有人使用，包括残疾人士。</p><p>无障碍性是网站或应用的一个特性，它使得网站或应用可以被所有人使用，包括残疾人士。无障碍性包括以下几个方面：</p><ol><li>可访问性：网站或应用可以被所有用户访问，包括残疾人士。这包括使用键盘、鼠标、屏幕阅读器等辅助技术访问网站或应用。2. 可理解性：网站或应用的内容可以被所有用户理解。这包括使用清晰、简洁的语言，以及提供足够的上下文信息。3. 可操作性：网站或应用可以被所有用户操作。这包括使用键盘、鼠标、触摸屏等输入设备操作网站或应用。4. 可感知性：网站或应用的内容可以被所有用户感知。这包括使用清晰、对比度高的颜色，以及提供足够的视觉反馈。</li></ol><p>无障碍性是网站或应用的一个重要特性，它可以帮助网站或应用更好地服务于所有用户，包括残疾人士。</p><h2 id="dom-的顺序很重要" tabindex="-1"><a class="header-anchor" href="#dom-的顺序很重要"><span>DOM 的顺序很重要</span></a></h2><p>读屏软件在读屏时默认按照 DOM 的顺序朗读，因此如果 DOM 的顺序与内容的语义顺序不一致，例如使用了 flex-direction: row-reverse; 使得内容的顺序倒序显示，会使得内容难以理解。因此尽量避免使用会影响到 DOM 视觉顺序的样式，如果无法避免，需要手动设置 tabIndex 属性，告知读屏软件正确的内容顺序。</p><h2 id="图像使用-alt-属性" tabindex="-1"><a class="header-anchor" href="#图像使用-alt-属性"><span>图像使用 alt 属性</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>img<span class="token operator">&gt;</span> 标签需要加上 alt 属性，读屏软件会自动读出 alt 的内容，例如 alt 内容为<span class="token string">&quot;一只目光汹汹凝视远方的猫&quot;</span>，那么会被读作<span class="token string">&quot;一只目光汹汹凝视远方的猫 图像&quot;</span>。如果没有添加 alt 属性，那么仅会读作<span class="token string">&quot;图像&quot;</span>，视障用户会完全无法理解其实际含义。</span>
<span class="line">但是，当 <span class="token operator">&lt;</span>img<span class="token operator">&gt;</span> 标签出现在 <span class="token operator">&lt;</span>a<span class="token operator">&gt;</span> 标签内部，作为一个图像链接时，应在 <span class="token operator">&lt;</span>a<span class="token operator">&gt;</span> 上使用 title 属性，<span class="token operator">&lt;</span>img<span class="token operator">&gt;</span> 标签可不加 alt 属性。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="视频使用-title-属性" tabindex="-1"><a class="header-anchor" href="#视频使用-title-属性"><span>视频使用 title 属性</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">与上面的 <span class="token operator">&lt;</span>img<span class="token operator">&gt;</span> 标签相似，<span class="token operator">&lt;</span>video<span class="token operator">&gt;</span> 标签需要加上 title 属性，例如 title 内容为<span class="token string">&quot;一只正在奔跑的猫&quot;</span>，那么会被读作<span class="token string">&quot;一只正在奔跑的猫 视频&quot;</span>。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="禁用状态使用-disabled-属性" tabindex="-1"><a class="header-anchor" href="#禁用状态使用-disabled-属性"><span>禁用状态使用 disabled 属性</span></a></h2><p>使用特定的 class 来增加禁用态样式是常见的手法，但由于 class 语义并不能被读屏软件识别，因此读屏时无法知道当前处于禁用态。可以改为使用 disabled 属性实现禁用态，例如：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;search&quot;</span> name<span class="token operator">=</span><span class="token string">&quot;q&quot;</span> placeholder<span class="token operator">=</span><span class="token string">&quot;请输入用户名&quot;</span> aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token string">&quot;搜索用户&quot;</span> disabled<span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment">/* 禁用态样式 */</span></span>
<span class="line">input<span class="token punctuation">[</span>disabled<span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">.5</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而对于没有 disabled 属性的标签，例如 a 标签，可以使用 aria-disabled 属性达到同样的效果。</p><h2 id="a-标签作为按钮需要指明-role-button" tabindex="-1"><a class="header-anchor" href="#a-标签作为按钮需要指明-role-button"><span>a 标签作为按钮需要指明 role=&quot;button&quot;</span></a></h2><p>在 H5 中，为了避免一些浏览器默认样式的干扰，以及制作点击效果（具体原因），目前采用 a 标签实现。但从无障碍的角度考虑，a 标签默认会被当做链接处理，读屏时会读作&quot;链接内的文字 链接&quot;。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;test_btn&quot;</span> role<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;javascript:;&quot;</span><span class="token operator">&gt;</span>文字<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>读屏时会读出&quot;文字 按钮&quot;。</p><p>按钮可能会用图片实现，增加描述文字</p><p>如果 a 标签内本身没有文字，例如以图片、背景色和边框制作的按钮，还需要加上 aria-label=&quot;描述文字&quot;，读屏时会读作&quot;描述文字 按钮&quot;的形式</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;test_btn&quot;</span> role<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;javascript:;&quot;</span> aria<span class="token operator">-</span>label<span class="token operator">=</span><span class="token string">&quot;更完整的描述&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="多重标签嵌套" tabindex="-1"><a class="header-anchor" href="#多重标签嵌套"><span>多重标签嵌套</span></a></h2><p>另外 a 标签内容如果有嵌套的标签，并不会影响文字被读出，例如：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>a <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;test_btn&quot;</span> role<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> href<span class="token operator">=</span><span class="token string">&quot;javascript:;&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;test_btn_inner&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>span <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;test_btn_inner_text&quot;</span><span class="token operator">&gt;</span>文字<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="读屏时仍会读出-文字-按钮-。" tabindex="-1"><a class="header-anchor" href="#读屏时仍会读出-文字-按钮-。"><span>读屏时仍会读出&quot;文字 按钮&quot;。</span></a></h2><p>用 background-image 实现的 icon 无法被无障碍识别，需要改成 img 实现，用 alt 写文案 一些数字读出来是英文的，显式指定 lang 为 zh</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">&quot;zh&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">...</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29)])])}const i=a(p,[["render",o]]),c=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E5%85%B6%E4%BB%96%E7%B1%BB/%E5%89%8D%E7%AB%AF%E6%97%A0%E9%9A%9C%E7%A2%8DAccessibility.html","title":"前端无障碍Accessibility","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/js类/其他类/前端无障碍Accessibility.md"}');export{i as comp,c as data};
