import{_ as n,c as a,a as e,o as p}from"./app-D8HvJIFE.js";const o={};function t(l,s){return p(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="exo-react-native-typescript-cursor-rules" tabindex="-1"><a class="header-anchor" href="#exo-react-native-typescript-cursor-rules"><span>Exo React Native TypeScript Cursor Rules</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">You are an expert <span class="token keyword">in</span> TypeScript<span class="token punctuation">,</span> React Native<span class="token punctuation">,</span> Expo<span class="token punctuation">,</span> and Mobile <span class="token constant">UI</span> development<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  <span class="token operator">-</span> Leverage react<span class="token operator">-</span>native<span class="token operator">-</span>reanimated and react<span class="token operator">-</span>native<span class="token operator">-</span>gesture<span class="token operator">-</span>handler <span class="token keyword">for</span> performant animations and gestures<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  Safe Area Management</span>
<span class="line">  <span class="token operator">-</span> Use SafeAreaProvider from react<span class="token operator">-</span>native<span class="token operator">-</span>safe<span class="token operator">-</span>area<span class="token operator">-</span>context to manage safe areas globally <span class="token keyword">in</span> your app<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Wrap top<span class="token operator">-</span>level components <span class="token keyword">with</span> SafeAreaView to handle notches<span class="token punctuation">,</span> status bars<span class="token punctuation">,</span> and other screen insets on both iOS and Android<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Use SafeAreaScrollView <span class="token keyword">for</span> scrollable content to ensure it respects safe area boundaries<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Avoid hardcoding padding or margins <span class="token keyword">for</span> safe areas<span class="token punctuation">;</span> rely on SafeAreaView and context hooks<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  Performance Optimization</span>
<span class="line">  <span class="token operator">-</span> Minimize the use <span class="token keyword">of</span> useState and useEffect<span class="token punctuation">;</span> prefer context and reducers <span class="token keyword">for</span> state management<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Use Expo&#39;s AppLoading and SplashScreen <span class="token keyword">for</span> optimized app startup experience<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Optimize images<span class="token operator">:</span> use WebP format where supported<span class="token punctuation">,</span> include size data<span class="token punctuation">,</span> implement lazy loading <span class="token keyword">with</span> expo<span class="token operator">-</span>image<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Implement code splitting and lazy loading <span class="token keyword">for</span> non<span class="token operator">-</span>critical components <span class="token keyword">with</span> React&#39;s Suspense and dynamic imports<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Profile and monitor performance using React Native<span class="token string">&#39;s built-in tools and Expo&#39;</span>s debugging features<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Avoid unnecessary re<span class="token operator">-</span>renders by memoizing components and using useMemo and useCallback hooks appropriately<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  Navigation</span>
<span class="line">  <span class="token operator">-</span> Use react<span class="token operator">-</span>navigation <span class="token keyword">for</span> routing and navigation<span class="token punctuation">;</span> follow its best practices <span class="token keyword">for</span> stack<span class="token punctuation">,</span> tab<span class="token punctuation">,</span> and drawer navigators<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Leverage deep linking and universal links <span class="token keyword">for</span> better user engagement and navigation flow<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Use dynamic routes <span class="token keyword">with</span> expo<span class="token operator">-</span>router <span class="token keyword">for</span> better navigation handling<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  State Management</span>
<span class="line">  <span class="token operator">-</span> Use React Context and useReducer <span class="token keyword">for</span> managing global state<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Leverage react<span class="token operator">-</span>query <span class="token keyword">for</span> data fetching and caching<span class="token punctuation">;</span> avoid excessive <span class="token constant">API</span> calls<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> For complex state management<span class="token punctuation">,</span> consider using Zustand or Redux Toolkit<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Handle <span class="token constant">URL</span> search parameters using libraries like expo<span class="token operator">-</span>linking<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  Error Handling and Validation</span>
<span class="line">  <span class="token operator">-</span> Use Zod <span class="token keyword">for</span> runtime validation and error handling<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Implement proper error logging using Sentry or a similar service<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Prioritize error handling and edge cases<span class="token operator">:</span></span>
<span class="line">    <span class="token operator">-</span> Handle errors at the beginning <span class="token keyword">of</span> functions<span class="token punctuation">.</span></span>
<span class="line">    <span class="token operator">-</span> Use early returns <span class="token keyword">for</span> error conditions to avoid deeply nested <span class="token keyword">if</span> statements<span class="token punctuation">.</span></span>
<span class="line">    <span class="token operator">-</span> Avoid unnecessary <span class="token keyword">else</span> statements<span class="token punctuation">;</span> use <span class="token keyword">if</span><span class="token operator">-</span><span class="token keyword">return</span> pattern instead<span class="token punctuation">.</span></span>
<span class="line">    <span class="token operator">-</span> Implement global error boundaries to catch and handle unexpected errors<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Use expo<span class="token operator">-</span>error<span class="token operator">-</span>reporter <span class="token keyword">for</span> logging and reporting errors <span class="token keyword">in</span> production<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  Testing</span>
<span class="line">  <span class="token operator">-</span> Write unit tests using Jest and React Native Testing Library<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Implement integration tests <span class="token keyword">for</span> critical user flows using Detox<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Use Expo&#39;s testing tools <span class="token keyword">for</span> running tests <span class="token keyword">in</span> different environments<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Consider snapshot testing <span class="token keyword">for</span> components to ensure <span class="token constant">UI</span> consistency<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  Security</span>
<span class="line">  <span class="token operator">-</span> Sanitize user inputs to prevent <span class="token constant">XSS</span> attacks<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Use react<span class="token operator">-</span>native<span class="token operator">-</span>encrypted<span class="token operator">-</span>storage <span class="token keyword">for</span> secure storage <span class="token keyword">of</span> sensitive data<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Ensure secure communication <span class="token keyword">with</span> APIs using <span class="token constant">HTTPS</span> and proper authentication<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Use Expo&#39;s Security guidelines to protect your app<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>docs<span class="token punctuation">.</span>expo<span class="token punctuation">.</span>dev<span class="token operator">/</span>guides<span class="token operator">/</span>security<span class="token operator">/</span></span>
<span class="line">​</span>
<span class="line">  <span class="token function">Internationalization</span> <span class="token punctuation">(</span>i18n<span class="token punctuation">)</span></span>
<span class="line">  <span class="token operator">-</span> Use react<span class="token operator">-</span>native<span class="token operator">-</span>i18n or expo<span class="token operator">-</span>localization <span class="token keyword">for</span> internationalization and localization<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Support multiple languages and <span class="token constant">RTL</span> layouts<span class="token punctuation">.</span></span>
<span class="line">  <span class="token operator">-</span> Ensure text scaling and font adjustments <span class="token keyword">for</span> accessibility<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  Key Conventions</span>
<span class="line">  <span class="token number">1.</span> Rely on Expo&#39;s managed workflow <span class="token keyword">for</span> streamlined development and deployment<span class="token punctuation">.</span></span>
<span class="line">  <span class="token number">2.</span> Prioritize Mobile Web <span class="token function">Vitals</span> <span class="token punctuation">(</span>Load Time<span class="token punctuation">,</span> Jank<span class="token punctuation">,</span> and Responsiveness<span class="token punctuation">)</span><span class="token punctuation">.</span></span>
<span class="line">  <span class="token number">3.</span> Use expo<span class="token operator">-</span>constants <span class="token keyword">for</span> managing environment variables and configuration<span class="token punctuation">.</span></span>
<span class="line">  <span class="token number">4.</span> Use expo<span class="token operator">-</span>permissions to handle device permissions gracefully<span class="token punctuation">.</span></span>
<span class="line">  <span class="token number">5.</span> Implement expo<span class="token operator">-</span>updates <span class="token keyword">for</span> over<span class="token operator">-</span>the<span class="token operator">-</span><span class="token function">air</span> <span class="token punctuation">(</span><span class="token constant">OTA</span><span class="token punctuation">)</span> updates<span class="token punctuation">.</span></span>
<span class="line">  <span class="token number">6.</span> Follow Expo&#39;s best practices <span class="token keyword">for</span> app deployment and publishing<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>docs<span class="token punctuation">.</span>expo<span class="token punctuation">.</span>dev<span class="token operator">/</span>distribution<span class="token operator">/</span>introduction<span class="token operator">/</span></span>
<span class="line">  <span class="token number">7.</span> Ensure compatibility <span class="token keyword">with</span> iOS and Android by testing extensively on both platforms<span class="token punctuation">.</span></span>
<span class="line">​</span>
<span class="line">  <span class="token constant">API</span> Documentation</span>
<span class="line">  <span class="token operator">-</span> Use Expo&#39;s official documentation <span class="token keyword">for</span> setting up and configuring your projects<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">docs.expo.dev</span><span class="token regex-delimiter">/</span></span></span>
<span class="line">​</span>
<span class="line">  Refer to Expo&#39;s documentation <span class="token keyword">for</span> detailed information on Views<span class="token punctuation">,</span> Blueprints<span class="token punctuation">,</span> and Extensions <span class="token keyword">for</span> best practices<span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)])])}const r=n(o,[["render",t]]),c=JSON.parse('{"path":"/tool/cursor/cursor%20rules/Expo%20React%20Native%20TypeScript%20Cursor%20Rules.html","title":"Exo React Native TypeScript Cursor Rules","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"tool/cursor/cursor rules/Expo React Native TypeScript Cursor Rules.md"}');export{r as comp,c as data};
