import{_ as a,c as i,a as e,o as n}from"./app-D8HvJIFE.js";const s={};function t(r,l){return n(),i("div",null,[...l[0]||(l[0]=[e('<h1 id="cdn-原理解析" tabindex="-1"><a class="header-anchor" href="#cdn-原理解析"><span>CDN 原理解析</span></a></h1><p>CDN (全称 Content Delivery Network)，即内容分发网络。</p><h2 id="一、基本概念" tabindex="-1"><a class="header-anchor" href="#一、基本概念"><span>一、基本概念</span></a></h2><p>CDN 是一种通过互联网互相连接的计算机网络系统，它能够将源站内容分发至全球各地的节点服务器，使用户可以就近获取所需内容。 简单来讲，CDN 就是根据用户位置分配最近的资源</p><h3 id="主要特点" tabindex="-1"><a class="header-anchor" href="#主要特点"><span>主要特点：</span></a></h3><ol><li>分布式存储</li><li>智能调度</li><li>负载均衡</li><li>就近访问</li></ol><h2 id="二、工作原理" tabindex="-1"><a class="header-anchor" href="#二、工作原理"><span>二、工作原理</span></a></h2><h3 id="_1-传统访问模式" tabindex="-1"><a class="header-anchor" href="#_1-传统访问模式"><span>1. 传统访问模式</span></a></h3><p>用户访问未使用 CDN 的网站流程：</p><ol><li>用户输入域名</li><li>本地 DNS 解析获取 IP</li><li>直接访问源站服务器</li><li>获取数据返回</li></ol><h3 id="_2-cdn-访问模式" tabindex="-1"><a class="header-anchor" href="#_2-cdn-访问模式"><span>2. CDN 访问模式</span></a></h3><p>使用 CDN 后的访问流程：</p><ol><li>用户输入域名</li><li>本地 DNS 解析到 CDN 专用 DNS 服务器</li><li>CDN 的 DNS 服务器返回 CNAME 记录</li><li>智能调度系统选择最优节点</li><li>返回边缘节点 IP</li><li>用户访问边缘节点获取数据</li></ol><h3 id="_3-cdn-调度策略" tabindex="-1"><a class="header-anchor" href="#_3-cdn-调度策略"><span>3. CDN 调度策略</span></a></h3><p>CDN 系统通过全局负载均衡（GSLB）实现最优节点选择：</p><ul><li><strong>地理位置判断</strong>：根据用户 IP 选择最近节点</li><li><strong>网络条件判断</strong>： <ul><li>节点服务器负载状况</li><li>节点带宽容量</li><li>用户所在运营商网络</li><li>节点响应时间</li></ul></li><li><strong>内容判断</strong>： <ul><li>节点是否有缓存所需内容</li><li>内容是否过期</li></ul></li></ul><h3 id="_4-缓存机制" tabindex="-1"><a class="header-anchor" href="#_4-缓存机制"><span>4. 缓存机制</span></a></h3><p>CDN 边缘节点的缓存策略：</p><ul><li>当用户首次请求某内容时，边缘节点会从源站拉取</li><li>将内容缓存在本地，设定缓存过期时间</li><li>其他用户请求相同内容时直接从边缘节点获取</li><li>定期检查缓存内容是否过期，及时更新</li></ul><h2 id="三、cdn-优势" tabindex="-1"><a class="header-anchor" href="#三、cdn-优势"><span>三、CDN 优势</span></a></h2><ol><li><strong>提升访问速度</strong>：就近访问，减少网络跳转</li><li><strong>减轻源站压力</strong>：分散源站访问压力</li><li><strong>提高可用性</strong>：多节点备份，防止单点故障</li><li><strong>节省带宽成本</strong>：合理利用边缘节点带宽</li><li><strong>防御网络攻击</strong>：分散式架构天然抵御 DDoS 攻击</li></ol><h2 id="四、应用场景" tabindex="-1"><a class="header-anchor" href="#四、应用场景"><span>四、应用场景</span></a></h2><ol><li>静态资源加速（图片、CSS、JS 等）</li><li>视频点播/直播加速</li><li>大文件下载加速</li><li>全站加速</li></ol>',23)])])}const o=a(s,[["render",t]]),d=JSON.parse('{"path":"/http/http021-CDN%E5%8E%9F%E7%90%86.html","title":"CDN 原理解析","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"http/http021-CDN原理.md"}');export{o as comp,d as data};
