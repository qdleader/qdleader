import{_ as n,c as a,a as e,o as l}from"./app-D8HvJIFE.js";const t={};function p(i,s){return l(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="解决-vue3-0-vite-项目打包后低版本浏览器兼容性问题" tabindex="-1"><a class="header-anchor" href="#解决-vue3-0-vite-项目打包后低版本浏览器兼容性问题"><span>解决 Vue3.0+Vite 项目打包后低版本浏览器兼容性问题</span></a></h1><h2 id="_1-官方解决方案-使用-vitejs-plugin-legacy-插件" tabindex="-1"><a class="header-anchor" href="#_1-官方解决方案-使用-vitejs-plugin-legacy-插件"><span>1. 官方解决方案：使用@vitejs/plugin-legacy 插件</span></a></h2><p>它将自动生成传统版本的 chunk 及与其相对应 ES 语言特性方面的 polyfill。兼容版的 chunk 只会在不支持原生 ESM 的浏览器中进行按需加载。</p><p>安装插件：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> i @vitejs/plugin-legacy <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// vite.config.js</span></span>
<span class="line"><span class="token keyword">import</span> legacy <span class="token keyword">from</span> <span class="token string">&quot;@vitejs/plugin-legacy&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token function">legacy</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">targets</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;Chrome 64&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">modernPolyfills</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// legacy({</span></span>
<span class="line">    <span class="token comment">//   targets: [&quot;defaults&quot;, &quot;ie &gt;= 11&quot;, &quot;chrome 52&quot;], //需要兼容的目标列表，可以设置多个</span></span>
<span class="line">    <span class="token comment">//   additionalLegacyPolyfills: [&quot;regenerator-runtime/runtime&quot;],</span></span>
<span class="line">    <span class="token comment">//   renderLegacyChunks: true,</span></span>
<span class="line">    <span class="token comment">//   polyfills: [</span></span>
<span class="line">    <span class="token comment">//     &quot;es.symbol&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.array.filter&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.promise&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.promise.finally&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es/map&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es/set&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.array.for-each&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.object.define-properties&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.object.define-property&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.object.get-own-property-descriptor&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.object.get-own-property-descriptors&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.object.keys&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;es.object.to-string&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;web.dom-collections.for-each&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;esnext.global-this&quot;,</span></span>
<span class="line">    <span class="token comment">//     &quot;esnext.string.match-all&quot;,</span></span>
<span class="line">    <span class="token comment">//   ],</span></span>
<span class="line">    <span class="token comment">// }),</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-vitejs-plugin-legacy-插件-在打包过程中做了什么" tabindex="-1"><a class="header-anchor" href="#_2-vitejs-plugin-legacy-插件-在打包过程中做了什么"><span>2. @vitejs/plugin-legacy 插件，在打包过程中做了什么？</span></a></h2><p>打包过程中使用@babel/preset-env 转换浏览器不支持的语法和新 API，为包中的每个块生成相应的转化块； 生成一个包含 SystemJS 运行时的 polyfill 块； 在打包文件中生成带有 legacy 名的文件，每个 js 脚本文件都有一个与其对应的转化版本； html 文件中新增了一些 script-nomodule 脚本，这些脚本根据浏览器的支持程度来动态的引入正常版本文件还是带有 legacy 字样的转化版本文件</p>`,8)])])}const o=n(t,[["render",p]]),r=JSON.parse('{"path":"/vite/%E8%A7%A3%E5%86%B3Vue3.0_Vite%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E5%90%8E%E4%BD%8E%E7%89%88%E6%9C%AC%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98.html","title":"解决 Vue3.0+Vite 项目打包后低版本浏览器兼容性问题","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"vite/解决Vue3.0+Vite项目打包后低版本浏览器兼容性问题.md"}');export{o as comp,r as data};
