import{_ as a,c as s,a as n,o as t}from"./app-D8HvJIFE.js";const p={};function o(r,e){return t(),s("div",null,[...e[0]||(e[0]=[n(`<h1 id="vue父组件和子组件的生命周期执行顺序" tabindex="-1"><a class="header-anchor" href="#vue父组件和子组件的生命周期执行顺序"><span>vue父组件和子组件的生命周期执行顺序</span></a></h1><p>##1.渲染过程顺序： 父组件beforeCreate() -&gt; 父组件created() -&gt; 父组件beforeMount() -&gt; 子组件beforeCreate() -&gt;子组件created() -&gt; 子组件beforeMount() -&gt; 子组件mounted() -&gt; 父组件mounted()</p><p>##父组件更新过程： 父组件beforeUpdate() -&gt; 父组件updated()</p><p>##子组件更新过程： 父组件beforeUpdate() -&gt; 子组件beforeUpdate() -&gt; 子组件updated() -&gt; 父组件updated()</p><p>##3.销毁过程 父组件beforeDestroy() -&gt; 子组件beforeDestroy() -&gt; 子组件destroyed() -&gt; 父组件destroyed()</p><p>##总结： 不管是哪种情况，都一定是父组件等待子组件完成后，才会执行自己对应完成的钩子</p><p>##拓展有同学问：</p><p>那个我要想在所有的页面渲染完毕后进行操作咋办？</p><p>你可以在mounted中：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">//此时页面已经渲染完毕</span></span>
<span class="line">	<span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)])])}const d=a(p,[["render",o]]),l=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/vue%E7%AF%87/V007-vue%E7%88%B6%E7%BB%84%E4%BB%B6%E5%92%8C%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F.html","title":"vue父组件和子组件的生命周期执行顺序","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/vue篇/V007-vue父组件和子组件的生命周期执行顺序.md"}');export{d as comp,l as data};
