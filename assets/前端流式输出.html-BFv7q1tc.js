import{_ as n,c as a,a as e,o as t}from"./app-D8HvJIFE.js";const p={};function o(c,s){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="前端流式输出" tabindex="-1"><a class="header-anchor" href="#前端流式输出"><span>前端流式输出</span></a></h1><p>fetch-event-source</p><h2 id="问题与限制" tabindex="-1"><a class="header-anchor" href="#问题与限制"><span>问题与限制</span></a></h2><p>默认的浏览器 EventSource API 在以下方面存在一些限制：</p><blockquote><p>无法传递请求体（request body），必须将执行请求所需的所有信息编码到 URL 中，而大多数浏览器对 URL 的长度限制为 2000 个字符。 无法传递自定义请求头。 只能进行 GET 请求，无法指定其他方法。 如果连接中断，无法控制重试策略，浏览器会自动进行几次尝试然后停止。</p></blockquote><h2 id="microsoft-fetch-event-source-的优势" tabindex="-1"><a class="header-anchor" href="#microsoft-fetch-event-source-的优势"><span>@microsoft/fetch-event-source 的优势</span></a></h2><p>@microsoft/fetch-event-source 提供了一个基于 Fetch API 的替代接口，完全兼容 Event Stream 格式。这使得我们能够以更加灵活的方式进行服务器发送事件的消费。以下是该库的一些主要优势：</p><blockquote><p>支持任何请求方法、请求头和请求体，以及 Fetch API 提供的其他功能。甚至可以提供替代的 fetch() 实现，以应对默认浏览器实现无法满足需求的情况。 提供对响应对象的访问权限，允许在解析事件源之前进行自定义验证/处理。这在存在 API 网关（如 nginx）的情况下非常有用，如果网关返回错误，我们可能希望正确处理它。 对连接中断或发生错误时，提供完全控制的重试策略。 此外，该库还集成了浏览器的 Page Visibility API，使得在文档被隐藏时（例如用户最小化窗口），连接会关闭，当文档再次可见时会自动使用上次事件 ID 进行重试。这有助于减轻服务器负担，避免不必要的开放连接（但如果需要，可以选择禁用此行为）。</p></blockquote><p>安装</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">npm install @microsoft<span class="token operator">/</span>fetch<span class="token operator">-</span>event<span class="token operator">-</span>source</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> fetchEventSource <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@microsoft/fetch-event-source&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">await</span> <span class="token function">fetchEventSource</span><span class="token punctuation">(</span><span class="token string">&quot;/api/sse&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">onmessage</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ev<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过传递所有其他由默认 fetch API 暴露的参数，进行更灵活的请求，例如：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> ctrl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AbortController</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//用于中断请求</span></span>
<span class="line"></span>
<span class="line"><span class="token function">fetchEventSource</span><span class="token punctuation">(</span><span class="token string">&quot;/api/sse&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">openWhenHidden</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//页面退至后台保持连接</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;Content-Type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">signal</span><span class="token operator">:</span> ctrl<span class="token punctuation">.</span>signal<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过使用 @microsoft/fetch-event-source，我们能够更灵活地处理服务器发送事件请求，并充分发挥 Fetch API 的功能。希望这篇博客能够对你理解和使用该库提供一些帮助。</p>`,15)])])}const i=n(p,[["render",o]]),r=JSON.parse('{"path":"/ai/%E5%89%8D%E7%AB%AF%E6%B5%81%E5%BC%8F%E8%BE%93%E5%87%BA.html","title":"前端流式输出","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"ai/前端流式输出.md"}');export{i as comp,r as data};
