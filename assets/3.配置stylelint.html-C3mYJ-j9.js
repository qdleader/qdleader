import{_ as n,c as a,a as e,o as p}from"./app-D8HvJIFE.js";const t={};function l(o,s){return p(),a("div",null,[...s[0]||(s[0]=[e(`<p>https://stylelint.io/user-guide/get-started</p><h2 id="下载" tabindex="-1"><a class="header-anchor" href="#下载"><span>下载</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">npm install <span class="token operator">--</span>save<span class="token operator">-</span>dev stylelint stylelint<span class="token operator">-</span>config<span class="token operator">-</span>standard postcss<span class="token operator">-</span>lit</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在根目录下新建 .stylelintrc.js</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// @see: https://stylelint.io</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&#39;stylelint-config-standard&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 配置stylelint拓展插件</span></span>
<span class="line">    <span class="token comment">// &quot;stylelint-config-prettier&quot;, // 配置stylelint和prettier兼容</span></span>
<span class="line">    <span class="token string">&#39;stylelint-config-recess-order&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 配置stylelint css属性书写顺序插件,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// ignoreFiles: [&quot;**/node_modules/**&quot;, &quot;src/styles/**&quot;],</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;stylelint-scss&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 配置stylelint 拓展插件</span></span>
<span class="line">  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">indentation</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 指定缩进空格</span></span>
<span class="line">    <span class="token string-property property">&#39;no-invalid-double-slash-comments&#39;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&#39;no-descending-specificity&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在具有较高优先级的选择器后出现被其覆盖的较低优先级的选择器</span></span>
<span class="line">    <span class="token string-property property">&#39;function-url-quotes&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 要求或禁止 URL 的引号 &quot;always(必须加上引号)&quot;|&quot;never(没有引号)&quot;</span></span>
<span class="line">    <span class="token string-property property">&#39;string-quotes&#39;</span><span class="token operator">:</span> <span class="token string">&#39;double&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定字符串使用单引号或双引号</span></span>
<span class="line">    <span class="token string-property property">&#39;unit-case&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 指定单位的大小写 &quot;lower(全小写)&quot;|&quot;upper(全大写)&quot;</span></span>
<span class="line">    <span class="token string-property property">&#39;color-hex-case&#39;</span><span class="token operator">:</span> <span class="token string">&#39;lower&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定 16 进制颜色的大小写 &quot;lower(全小写)&quot;|&quot;upper(全大写)&quot;</span></span>
<span class="line">    <span class="token string-property property">&#39;color-hex-length&#39;</span><span class="token operator">:</span> <span class="token string">&#39;long&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定 16 进制颜色的简写或扩写 &quot;short(16进制简写)&quot;|&quot;long(16进制扩写)&quot;</span></span>
<span class="line">    <span class="token string-property property">&#39;rule-empty-line-before&#39;</span><span class="token operator">:</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 要求或禁止在规则之前的空行 &quot;always(规则之前必须始终有一个空行)&quot;|&quot;never(规则前绝不能有空行)&quot;|&quot;always-multi-line(多行规则之前必须始终有一个空行)&quot;|&quot;never-multi-line(多行规则之前绝不能有空行。)&quot;</span></span>
<span class="line">    <span class="token string-property property">&#39;font-family-no-missing-generic-family-keyword&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在字体族名称列表中缺少通用字体族关键字</span></span>
<span class="line">    <span class="token string-property property">&#39;block-opening-brace-space-before&#39;</span><span class="token operator">:</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 要求在块的开大括号之前必须有一个空格或不能有空白符 &quot;always(大括号前必须始终有一个空格)&quot;|&quot;never(左大括号之前绝不能有空格)&quot;|&quot;always-single-line(在单行块中的左大括号之前必须始终有一个空格)&quot;|&quot;never-single-line(在单行块中的左大括号之前绝不能有空格)&quot;|&quot;always-multi-line(在多行块中，左大括号之前必须始终有一个空格)&quot;|&quot;never-multi-line(多行块中的左大括号之前绝不能有空格)&quot;</span></span>
<span class="line">    <span class="token string-property property">&#39;property-no-unknown&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 禁止未知的属性(true 为不允许)</span></span>
<span class="line">    <span class="token string-property property">&#39;no-empty-source&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 禁止空源码</span></span>
<span class="line">    <span class="token string-property property">&#39;declaration-block-trailing-semicolon&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 要求或不允许在声明块中使用尾随分号 string：&quot;always(必须始终有一个尾随分号)&quot;|&quot;never(不得有尾随分号)&quot;</span></span>
<span class="line">    <span class="token string-property property">&#39;selector-class-pattern&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 强制选择器类名的格式</span></span>
<span class="line">    <span class="token string-property property">&#39;value-no-vendor-prefix&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 关闭 vendor-prefix(为了解决多行省略 -webkit-box)</span></span>
<span class="line">    <span class="token string-property property">&#39;at-rule-no-unknown&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&#39;selector-pseudo-class-no-unknown&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">ignorePseudoClasses</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;global&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;v-deep&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;deep&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和 .stylelintignore</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">/dist/*</span>
<span class="line">/public/*</span>
<span class="line">public/*</span>
<span class="line">/node_modules/*</span>
<span class="line">node_modules/*</span>
<span class="line">/node_modules/</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7)])])}const c=n(t,[["render",l]]),r=JSON.parse('{"path":"/%E5%B7%A5%E7%A8%8B%E5%8C%96/3.%E9%85%8D%E7%BD%AEstylelint.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"工程化/3.配置stylelint.md"}');export{c as comp,r as data};
