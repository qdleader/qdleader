import{_ as s,c as a,a as e,o as t}from"./app-D8HvJIFE.js";const p={};function c(i,n){return t(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="v006-vue中的清除计时器问题★" tabindex="-1"><a class="header-anchor" href="#v006-vue中的清除计时器问题★"><span>V006-vue中的清除计时器问题★</span></a></h1><p>1.有同学说我页面切来切去为什么就是没有触发destroyed呢，那我的定时器岂不是都清不了了，emm。。。。。。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">if</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不触发是正常的呀。</p><p>因为beforeDestory和destoryed是在节点销毁时候才会触发的，如果你切换路由时候没有用v-if控制显隐不触发也是正常的，一般那就不会触发。等你离开页面时候，才会触发。那他要不离开切了下路由还一直请求。。。 不！。，这不是我想要的。</p><p>那我写了个计时器还请不了了？</p><p>来来来，少年，我看你骨骼惊奇，传授你此法。。</p><p>判断当路由离开时候清除计时器。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">    <span class="token function">beforeRouteLeave</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">         <span class="token keyword">if</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此法不好使你来砍我。。。</p>`,10)])])}const o=s(p,[["render",c]]),u=JSON.parse('{"path":"/vue/V006-vue%E4%B8%AD%E7%9A%84%E6%B8%85%E9%99%A4%E8%AE%A1%E6%97%B6%E5%99%A8%E9%97%AE%E9%A2%98.html","title":"V006-vue中的清除计时器问题★","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"vue/V006-vue中的清除计时器问题.md"}');export{o as comp,u as data};
