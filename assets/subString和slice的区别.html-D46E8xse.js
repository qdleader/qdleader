import{_ as s,c as a,a as t,o as e}from"./app-D8HvJIFE.js";const p={};function c(l,n){return e(),a("div",null,[...n[0]||(n[0]=[t(`<h1 id="substring-和-slice-的区别" tabindex="-1"><a class="header-anchor" href="#substring-和-slice-的区别"><span>subString 和 slice 的区别</span></a></h1><h1 id="substring-和-slice-的区别-1" tabindex="-1"><a class="header-anchor" href="#substring-和-slice-的区别-1"><span>substring 和 slice 的区别</span></a></h1><p><code>substring</code> 和 <code>slice</code> 都是 JavaScript 中用于提取字符串子串的方法，但它们有一些重要的区别：</p><h2 id="基本语法" tabindex="-1"><a class="header-anchor" href="#基本语法"><span>基本语法</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">string<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span></span>
<span class="line">string<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> endIndex<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主要区别" tabindex="-1"><a class="header-anchor" href="#主要区别"><span>主要区别</span></a></h2><h3 id="_1-参数处理方式" tabindex="-1"><a class="header-anchor" href="#_1-参数处理方式"><span>1. 参数处理方式</span></a></h3><ul><li><p><strong>substring()</strong>:</p><ul><li>如果参数是负数，会被当作0处理</li><li>如果 <code>start</code> 大于 <code>end</code>，会自动交换这两个参数的位置</li><li>示例：<code>&quot;hello&quot;.substring(3, 1)</code> 等同于 <code>&quot;hello&quot;.substring(1, 3)</code></li></ul></li><li><p><strong>slice()</strong>:</p><ul><li>支持负数索引，负数表示从字符串末尾开始计算</li><li>如果 <code>start</code> 大于 <code>end</code>，返回空字符串</li><li>示例：<code>&quot;hello&quot;.slice(3, 1)</code> 返回 <code>&quot;&quot;</code></li></ul></li></ul><h3 id="_2-负值处理" tabindex="-1"><a class="header-anchor" href="#_2-负值处理"><span>2. 负值处理</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// substring 处理负值</span></span>
<span class="line">str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 相当于 str.substring(0, 5) -&gt; &quot;hello&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// slice 处理负值</span></span>
<span class="line">str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 从后往前3个字符是&quot;rld&quot;，但结束位置是5，所以返回空字符串 &quot;&quot;</span></span>
<span class="line">str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 从后往前6个字符是&quot;w&quot;，到倒数第1个字符是&quot;d&quot; -&gt; &quot;worl&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-使用场景" tabindex="-1"><a class="header-anchor" href="#_3-使用场景"><span>3. 使用场景</span></a></h3><ul><li><p><strong>substring()</strong>:</p><ul><li>适用于简单提取子串的场景</li><li>当你确定索引都是正数且顺序正确时使用</li></ul></li><li><p><strong>slice()</strong>:</p><ul><li>更灵活，支持从字符串末尾开始计算</li><li>适用于需要处理负索引或从字符串末尾提取子串的场景</li></ul></li></ul><h2 id="示例对比" tabindex="-1"><a class="header-anchor" href="#示例对比"><span>示例对比</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 示例1: start &gt; end</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: el (自动交换参数)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 输出: &quot;&quot; (空字符串)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 示例2: 负值处理</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: hello (负值被视为0)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 输出: worl (从后往前计算)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 示例3: 提取最后几个字符</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: rld</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">// 输出: rld (更简洁)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="最佳实践建议" tabindex="-1"><a class="header-anchor" href="#最佳实践建议"><span>最佳实践建议</span></a></h2><ul><li>如果你需要从字符串末尾提取子串，使用 <code>slice()</code> 更简洁</li><li>如果你确定所有参数都是正数且顺序正确，两者都可以使用</li><li>避免在 <code>substring()</code> 中使用负参数，因为它会被当作0处理，可能导致意外结果</li><li>在不确定参数顺序或可能包含负值的情况下，优先使用 <code>slice()</code></li></ul><h2 id="性能考虑" tabindex="-1"><a class="header-anchor" href="#性能考虑"><span>性能考虑</span></a></h2><p>在大多数现代JavaScript引擎中，这两个方法的性能差异可以忽略不计，选择哪个主要取决于你的具体需求和使用场景。</p>`,18)])])}const i=s(p,[["render",c]]),u=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E5%85%B6%E4%BB%96%E7%B1%BB/subString%E5%92%8Cslice%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"subString 和 slice 的区别","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/js类/其他类/subString和slice的区别.md"}');export{i as comp,u as data};
