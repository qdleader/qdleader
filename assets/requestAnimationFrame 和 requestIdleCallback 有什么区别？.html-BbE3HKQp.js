import{_ as e,c as s,a as n,o as t}from"./app-D8HvJIFE.js";const l={};function r(i,a){return t(),s("div",null,[...a[0]||(a[0]=[n(`<h1 id="requestanimationframe-和-requestidlecallback-有什么区别" tabindex="-1"><a class="header-anchor" href="#requestanimationframe-和-requestidlecallback-有什么区别"><span>requestAnimationFrame 和 requestIdleCallback 有什么区别？</span></a></h1><h2 id="requestanimationframe" tabindex="-1"><a class="header-anchor" href="#requestanimationframe"><span>requestAnimationFrame:</span></a></h2><p>requestAnimationFrame 是一个用于在下一次浏览器重绘之前执行指定的回调函数的方法。它通常用于执行与动画相关的任务，以确保动画的流畅性和性能。</p><p>调用时机：requestAnimationFrame 的回调函数会在浏览器下一次绘制之前执行，通常在每秒约 60 次的频率下执行，这与浏览器的刷新率相匹配（通常为每秒 60 次）。 用途：requestAnimationFrame 适用于需要在动画中更新界面状态的场景，如实现平滑的动画效果、制作游戏等。</p><h2 id="requestidlecallback-requestidlecallback-是一个用于在浏览器空闲时执行指定的回调函数的方法。它通常用于执行一些低优先级的任务-以确保不会影响到页面的交互和动画性能。" tabindex="-1"><a class="header-anchor" href="#requestidlecallback-requestidlecallback-是一个用于在浏览器空闲时执行指定的回调函数的方法。它通常用于执行一些低优先级的任务-以确保不会影响到页面的交互和动画性能。"><span>requestIdleCallback：: requestIdleCallback 是一个用于在浏览器空闲时执行指定的回调函数的方法。它通常用于执行一些低优先级的任务，以确保不会影响到页面的交互和动画性能。</span></a></h2><p>调用时机：requestIdleCallback 的回调函数会在浏览器空闲时执行，即在浏览器没有其他任务需要执行时，会尽快执行注册的回调函数。</p><p>用途：requestIdleCallback 适用于执行一些低优先级的任务，如执行分析、预加载资源、后台数据同步等。</p><p>支持率： 95%（Chrome 47+、Edge 79+） 场景： 埋点、预加载、长计算零阻塞</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token function">requestIdleCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 在主线程空闲时执行</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)])])}const d=e(l,[["render",r]]),o=JSON.parse('{"path":"/%E4%B8%8D%E5%8F%AF%E4%B8%8D%E7%9F%A5%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%86%B7%E7%9F%A5%E8%AF%86/requestAnimationFrame%20%E5%92%8C%20requestIdleCallback%20%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F.html","title":"requestAnimationFrame 和 requestIdleCallback 有什么区别？","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"不可不知的项目冷知识/requestAnimationFrame 和 requestIdleCallback 有什么区别？.md"}');export{d as comp,o as data};
