import{_ as e,c as a,a as n,o as c}from"./app-D8HvJIFE.js";const t={};function i(l,s){return c(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="is-选择器-和-where-选择器" tabindex="-1"><a class="header-anchor" href="#is-选择器-和-where-选择器"><span>is 选择器 和 where 选择器</span></a></h1><h2 id="is-选择器" tabindex="-1"><a class="header-anchor" href="#is-选择器"><span>:is() 选择器</span></a></h2><p><code>:is()</code> 选择器用于匹配一组元素中的任何一个元素。它接受一个逗号分隔的元素选择器列表，并匹配列表中的任何一个元素。</p><p>例如，以下 CSS 代码将选择所有 <code>&lt;div&gt;</code>、<code>&lt;p&gt;</code> 和 <code>&lt;span&gt;</code> 元素：</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">:is(div, p, span)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="where-选择器" tabindex="-1"><a class="header-anchor" href="#where-选择器"><span>:where() 选择器</span></a></h2><p><code>:where()</code> 选择器用于匹配一组元素中的任何一个元素。它接受一个逗号分隔的元素选择器列表，并匹配列表中的任何一个元素。 例如，以下 CSS 代码将选择所有 <code>&lt;div&gt;</code>、<code>&lt;p&gt;</code> 和 <code>&lt;span&gt;</code> 元素：</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code class="language-css"><span class="line"><span class="token selector">:where(div, p, span)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)])])}const p=e(t,[["render",i]]),r=JSON.parse('{"path":"/css/css%E5%B0%8F%E6%8A%80%E5%B7%A7/is()%20%E5%92%8C%20_where()%20%E9%AB%98%E7%BA%A7%E9%80%89%E6%8B%A9%E5%99%A8.html","title":"is 选择器 和 where 选择器","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"css/css小技巧/:is() 和 :where() 高级选择器.md"}');export{p as comp,r as data};
