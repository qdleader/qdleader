import{_ as a,c as l,b as t,o as n}from"./app-D8HvJIFE.js";const s={};function r(d,e){return n(),l("div",null,[...e[0]||(e[0]=[t("h1",{id:"http三次握手的过程",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#http三次握手的过程"},[t("span",null,"http三次握手的过程")])],-1),t("p",null,[t("strong",null,"三次握手")],-1),t("p",null,"三次握手（Three-way Handshake）其实就是指建立一个TCP连接时，需要客户端和服务器总共发送3个包。进行三次握手的主要作用就是为了确认双方的接收能力和发送能力是否正常、指定自己的初始化序列号为后面的可靠性传送做准备。实质上其实就是连接服务器指定端口，建立TCP连接，并同步连接双方的序列号和确认号，交换TCP窗口大小信息。",-1),t("p",null,"刚开始客户端处于 Closed 的状态，服务端处于 Listen 状态。",-1),t("p",null,"进行三次握手：",-1),t("p",null,'TCP（传输控制协议）是一种面向连接的协议，它在数据传输之前需要在客户端和服务器之间建立连接。这个连接的建立过程就是我们所说的"三次握手"。以下是三次握手的具体步骤： 第一次握手：客户端将标志位SYN设置为1，随机产生一个值seq=J，并将该数据包发送给服务器，然后客户端进入SYN_SENT状态。 第二次握手：服务器收到客户端的SYN包，必须确认客户端的SYN，将标志位SYN和ACK都置为1，ack=J+1，同时为自己也要发送SYN请求信息，随机产生一个值seq=K，并将该数据包发送给客户端，此时服务器进入SYN_RCVD状态。 第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=K+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。 完成三次握手后，客户端与服务器就正式建立了连接，在这个状态下，双方都可以发送数据。',-1)])])}const o=a(s,[["render",r]]),p=JSON.parse('{"path":"/http/http%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E7%B1%BB/http%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E7%9A%84%E8%BF%87%E7%A8%8B.html","title":"http三次握手的过程","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"http/http三次握手四次挥手类/http三次握手的过程.md"}');export{o as comp,p as data};
