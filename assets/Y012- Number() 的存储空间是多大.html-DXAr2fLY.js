import{_ as s,c as a,a as e,o as t}from"./app-D8HvJIFE.js";const p={};function c(o,n){return t(),a("div",null,[...n[0]||(n[0]=[e(`<h1 id="number-的存储空间是多大-如果后台发送了一个超过最大限制的数字怎么办" tabindex="-1"><a class="header-anchor" href="#number-的存储空间是多大-如果后台发送了一个超过最大限制的数字怎么办"><span>Number() 的存储空间是多大？如果后台发送了一个超过最大限制的数字怎么办</span></a></h1><p>Number() 的存储空间是 +-(Math.pow(2, 53) - 1)；</p><p>如果后台返回超过最大限制的数字可以用bigint来计算，如果只是显示可以跟后端协商只返回字符串。</p><p>如果后台发送了一个超过这个最大限制的数字，JavaScript 会将其视为 Infinity。你可以使用 <code>isFinite()</code> 函数来检查一个数字是否是有限的，如果是 Infinity，则表示该数字超过了 JavaScript 的最大限制。</p><p>例如：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1.7976931348623157e+308</span><span class="token punctuation">;</span> <span class="token comment">// 最大值</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.7976931348623157e+308</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> num2 <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 超过最大值</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Infinity</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isFinite</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)])])}const i=s(p,[["render",c]]),u=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E8%BF%90%E7%AE%97%E7%B1%BB/Y012-%20Number()%20%E7%9A%84%E5%AD%98%E5%82%A8%E7%A9%BA%E9%97%B4%E6%98%AF%E5%A4%9A%E5%A4%A7.html","title":"Number() 的存储空间是多大？如果后台发送了一个超过最大限制的数字怎么办","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/js类/运算类/Y012- Number() 的存储空间是多大.md"}');export{i as comp,u as data};
