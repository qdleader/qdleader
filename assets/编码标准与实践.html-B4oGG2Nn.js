import{_ as n,c as a,a as e,o as l}from"./app-D8HvJIFE.js";const t={};function c(p,s){return l(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="编码标准与实践" tabindex="-1"><a class="header-anchor" href="#编码标准与实践"><span>编码标准与实践</span></a></h1><p>这一类别确保AI遵守最佳编码实践，促进可读性、性能、安全性和可维护性。以下是相关规则：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">使用明确变量名（规则<span class="token number">18</span>）： <span class="token constant">AI</span>应优先使用描述性、明确的变量名，提升代码可读性。这便于团队协作和后期维护。</span>
<span class="line">遵循一致的编码风格（规则<span class="token number">19</span>）： <span class="token constant">AI</span>应遵守项目现有编码风格，确保一致性。这提高了代码库的统一性，减少了风格冲突。</span>
<span class="line">优先考虑性能（规则<span class="token number">20</span>）： 在建议变更时，<span class="token constant">AI</span>应考虑并优先代码性能。这优化了应用程序的运行效率，特别是在资源受限的环境中。</span>
<span class="line">安全优先方法（规则<span class="token number">21</span>）： <span class="token constant">AI</span>在修改或建议代码变更时，应始终考虑安全影响。这减少了安全漏洞的风险，保护项目完整性。</span>
<span class="line">测试覆盖率（规则<span class="token number">22</span>）： <span class="token constant">AI</span>应为新或修改的代码建议或包含适当的单元测试，确保测试覆盖。这提高了代码质量，降低了后期测试成本。</span>
<span class="line">错误处理（规则<span class="token number">23</span>）： <span class="token constant">AI</span>应在必要时实现稳健的错误处理和日志记录。这提升了应用程序的可靠性和调试能力。</span>
<span class="line">模块化设计（规则<span class="token number">24</span>）： <span class="token constant">AI</span>应鼓励模块化设计原则，提高代码可维护性和可重用性。这便于代码扩展和团队协作。</span>
<span class="line">版本兼容性（规则<span class="token number">25</span>）： <span class="token constant">AI</span>应确保建议的变更与项目指定的语言或框架版本兼容；如有版本冲突，应建议替代方案或提供向后兼容的解决方案。这避免了技术债务和兼容性问题。</span>
<span class="line">避免魔术数字（规则<span class="token number">26</span>）： <span class="token constant">AI</span>应将硬编码值替换为命名常量，提高代码清晰度和可维护性。这便于理解和修改代码。</span>
<span class="line">考虑边缘情况（规则<span class="token number">27</span>）： 在实现逻辑时，<span class="token constant">AI</span>应始终考虑并处理潜在的边缘情况。这提高了代码的鲁棒性，减少了运行时错误。</span>
<span class="line">使用断言（规则<span class="token number">28</span>）： <span class="token constant">AI</span>应尽可能包含断言以验证假设并及早捕获潜在错误。这便于调试和验证代码逻辑。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)])])}const r=n(t,[["render",c]]),o=JSON.parse('{"path":"/tool/cursor/cursor%20rules/%E5%A5%BD%E7%9A%84rules/%E7%BC%96%E7%A0%81%E6%A0%87%E5%87%86%E4%B8%8E%E5%AE%9E%E8%B7%B5.html","title":"编码标准与实践","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"tool/cursor/cursor rules/好的rules/编码标准与实践.md"}');export{r as comp,o as data};
