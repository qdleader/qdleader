import{_ as n,c as a,a as t,o as e}from"./app-D8HvJIFE.js";const p={};function l(i,s){return e(),a("div",null,[...s[0]||(s[0]=[t(`<h1 id="attribute-和-property-的区别" tabindex="-1"><a class="header-anchor" href="#attribute-和-property-的区别"><span>attribute 和 property 的区别</span></a></h1><p>property 是 DOM 中的属性，是 JavaScript 里的对象； attribute 是 HTML 元素的属性，它的值只能够是字符串</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;div1&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;divClass&quot;</span> title<span class="token operator">=</span><span class="token string">&quot;divTitle&quot;</span> title1<span class="token operator">=</span><span class="token string">&quot;divTitle1&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">var</span> in1<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;div1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>in1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">“title1”被放在了attributes这个对象里，这个对象按顺序记录了我们在<span class="token constant">TAG</span>中定义的属性和属性的数量。</span>
<span class="line"></span>
<span class="line">从这里就可以看出，attributes是属于property的一个子集，它保存了<span class="token constant">HTML</span>标签上定义属性。如果再进一步探索attitudes中的每一个属性，会发现它们并不是简单的对象，它是一个Attr类型的对象，拥有NodeType、NodeName等属性。注意，打印attribute属性不会直接得到对象的值，而是获取一个包含属性名和值的字符串，如：</span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>in1<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span>title1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// divTitle1</span></span>
<span class="line">由此可以得出：</span>
<span class="line"></span>
<span class="line"><span class="token constant">HTML</span>标签中定义的属性和值会保存该<span class="token constant">DOM</span>对象的attributes属性里面；</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>Attribute（特性）：</li></ol><ul><li>是在 HTML 标记中定义的属性</li><li>它的值只能是字符串</li><li>即使值发生变化，HTML 代码中的 attribute 值也不会改变</li><li>例如：<code>&lt;input type=&quot;text&quot; value=&quot;hello&quot;&gt;</code> 中的 type 和 value 都是 attribute</li></ul><ol start="2"><li>Property（属性）：</li></ol><ul><li>是 DOM 对象的属性</li><li>可以是任何类型的值（不限于字符串）</li><li>会随着用户交互或 JS 操作而改变</li><li>例如：通过 JavaScript 访问的 element.value 就是 property</li></ul><h3 id="property-取值" tabindex="-1"><a class="header-anchor" href="#property-取值"><span>property 取值</span></a></h3><p>属性取值很简单。取任何属性的只，用“.”就可以：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> id <span class="token operator">=</span> div1<span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> className <span class="token operator">=</span> div1<span class="token punctuation">.</span>className<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> childNodes <span class="token operator">=</span> div1<span class="token punctuation">.</span>childNodes<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> attrs <span class="token operator">=</span> div1<span class="token punctuation">.</span>attributes<span class="token punctuation">;</span></span>
<span class="line">此处再次强调：</span>
<span class="line"></span>
<span class="line"><span class="token comment">// class 特性在变成属性时，名字改成了“className”，因此 div1.className 和 div1.getAttrbute(&#39;class&#39;)相同。</span></span>
<span class="line"><span class="token comment">// 上面代码中的 div1.attributes 是取的 attributes 这一属性，取出来保存到 attrs 变量中，attrs 就成了一个 NamedNodeList 类型的对象，里面存储了若干个 Attr 类型。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="property-赋值" tabindex="-1"><a class="header-anchor" href="#property-赋值"><span>property 赋值</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// 赋值和基本的 js 对象属性赋值一样，用“.”即可：</span></span>
<span class="line"></span>
<span class="line">div1<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">;</span></span>
<span class="line">div1<span class="token punctuation">.</span>align <span class="token operator">=</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">;</span></span>
<span class="line">div1<span class="token punctuation">.</span><span class="token constant">AAAAA</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">div1<span class="token punctuation">.</span><span class="token constant">BBBBB</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">对属性 Property 可以赋任何类型的值，而对特性 Attribute 只能赋值字符串！</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>举个实际例子：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果用户在输入框中输入&quot;world&quot;：</p><ul><li>input 的 value attribute 仍然是&quot;hello&quot;（通过 getAttribute(&#39;value&#39;)获取）</li><li>但 input 的 value property 已经变成&quot;world&quot;（通过 element.value 获取）</li></ul><p>更改 property 和 attribute 其中一个值，会出现什么结果</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> in1 <span class="token operator">=</span> div1<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;id1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">in1<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;new value of prop&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>in1<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;new value of prop&#39;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>in1<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;value=&quot;hello&quot;&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，页面中的输入栏的值变成了“new value of prop”，而 propety 中的 value 也变成了新的值，但 attributes 却仍然是“hello”。从这里可以推断，property 和 attribute 的同名属性的值并不是双向绑定的。</p><p>如果反过来，设置 attitudes 中的值，效果会怎样呢？</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">var</span> in2 <span class="token operator">=</span> div1<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;id2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">in2<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ni&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>in2<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//ni</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>in2<span class="token punctuation">.</span>attributes<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//value=&#39;ni&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由此，可得出结论：</p><p>property 能够从 attribute 中得到同步； attribute 不会同步 property 上的值； attribute 和 property 之间的数据绑定是单向的，attribute-&gt;property； 更改 property 和 attribute 上的任意值，都会将更新反映到 HTML 页面中；</p>`,23)])])}const c=n(p,[["render",l]]),u=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E5%9F%BA%E7%A1%80%E7%B1%BB/attribute%E5%92%8Cproperty%E7%9A%84%E5%8C%BA%E5%88%AB.html","title":"attribute 和 property 的区别","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/js类/基础类/attribute和property的区别.md"}');export{c as comp,u as data};
