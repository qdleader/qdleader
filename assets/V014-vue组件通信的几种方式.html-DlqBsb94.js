import{_ as n,c as a,a as e,o as t}from"./app-D8HvJIFE.js";const p={};function l(c,s){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="v014-vue组件通信的几种方式" tabindex="-1"><a class="header-anchor" href="#v014-vue组件通信的几种方式"><span>V014-vue组件通信的几种方式</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token number">1</span><span class="token punctuation">.</span>props 和$emit 父组件向子组件传递数据是通过 prop 传递的，子组件传递数据给父组件是通过$emit 触发事件来做到的</span>
<span class="line"><span class="token number">2</span><span class="token punctuation">.</span>$parent<span class="token punctuation">,</span>$children 获取当前组件的父组件和当前组件的子组件</span>
<span class="line"><span class="token number">3</span><span class="token punctuation">.</span>$attrs 和$listeners <span class="token constant">A</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token constant">B</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token constant">C</span>。Vue <span class="token number">2.4</span> 开始提供了$attrs 和$listeners <span class="token function">来解决这个问题</span></span>
<span class="line"><span class="token punctuation">(</span>如果一个第三方的组件有<span class="token number">100</span>个props和<span class="token number">100</span>个$emit触发的事件，你在对它进行二次封装的时候如果需要支持其所有的props和$emit触发的事件，你就可以用$attr和$listeners轻松解决，否则的话你还得写<span class="token number">100</span>个props和<span class="token number">100</span>个$emit触发的事件。还有多级组件嵌套的情况也很适用，不用将props一层一层往上传递。<span class="token punctuation">)</span></span>
<span class="line"><span class="token number">4.</span>父组件中通过 provide 来提供变量，然后在子组件中通过 inject <span class="token function">来注入变量。</span><span class="token punctuation">(</span>官方不推荐在实际业务中使用，但是写组件库时很常用<span class="token punctuation">)</span></span>
<span class="line"><span class="token number">5</span><span class="token punctuation">.</span>$refs 获取组件实例</span>
<span class="line"><span class="token number">6</span><span class="token punctuation">.</span>envetBus 兄弟组件数据传递 这种情况下可以使用事件总线的方式</span>
<span class="line"><span class="token number">7</span><span class="token punctuation">.</span>vuex 状态管理</span>
<span class="line"><span class="token number">8</span><span class="token punctuation">.</span>locastorage 和 sessionStorage</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)])])}const i=n(p,[["render",l]]),r=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/vue%E7%AF%87/V014-vue%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F.html","title":"V014-vue组件通信的几种方式","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/vue篇/V014-vue组件通信的几种方式.md"}');export{i as comp,r as data};
