import{_ as s,c as a,a as p,o as t}from"./app-D8HvJIFE.js";const e={};function c(l,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="将树结构拍平为一维数组" tabindex="-1"><a class="header-anchor" href="#将树结构拍平为一维数组"><span>将树结构拍平为一维数组</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@description</span> 使用递归处理路由菜单，生成一维数组，做菜单权限判断</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">menuList</span> 所有菜单列表</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Array<span class="token punctuation">}</span></span> <span class="token parameter">newArr</span> 菜单的一维数组</span>
<span class="line"> * <span class="token keyword">@return</span> array</span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">handleRouter</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">routerList</span><span class="token operator">:</span> Menu<span class="token punctuation">.</span>MenuOptions<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">newArr</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  routerList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">item</span><span class="token operator">:</span> Menu<span class="token punctuation">.</span>MenuOptions</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">typeof</span> item <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>path <span class="token operator">&amp;&amp;</span> newArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    item<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> item<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token function">handleRouter</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">,</span> newArr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> newArr<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法-2" tabindex="-1"><a class="header-anchor" href="#方法-2"><span>方法 2</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">	</span>
<span class="line">	<span class="token comment">// const arr1 = [</span></span>
<span class="line">	<span class="token comment">//   {</span></span>
<span class="line">	<span class="token comment">//     id: 1,</span></span>
<span class="line">	<span class="token comment">//     text: &quot;节点1&quot;,</span></span>
<span class="line">	<span class="token comment">//     parentId: 0,</span></span>
<span class="line">	<span class="token comment">//     children: [</span></span>
<span class="line">	<span class="token comment">//       {</span></span>
<span class="line">	<span class="token comment">//         id: 2,</span></span>
<span class="line">	<span class="token comment">//         text: &quot;节点1_1&quot;,</span></span>
<span class="line">	<span class="token comment">//         parentId: 1,</span></span>
<span class="line">	<span class="token comment">//       },</span></span>
<span class="line">	<span class="token comment">//     ],</span></span>
<span class="line">	<span class="token comment">//   },</span></span>
<span class="line">	<span class="token comment">//   // ...</span></span>
<span class="line">	<span class="token comment">// ]</span></span>
<span class="line">	</span>
<span class="line">	<span class="token keyword">function</span> <span class="token function">treeToList</span>  <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">const</span> <span class="token function-variable function">toList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">tree</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">			tree<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">					<span class="token function">toList</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>children<span class="token punctuation">)</span></span>
<span class="line">					<span class="token keyword">delete</span> item<span class="token punctuation">.</span>children</span>
<span class="line">				<span class="token punctuation">}</span></span>
<span class="line">				res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token function">toList</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span></span>
<span class="line">		<span class="token keyword">return</span> res</span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)])])}const o=s(e,[["render",c]]),u=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E6%A0%91%E7%B1%BB/%E5%B0%86%E6%A0%91%E7%BB%93%E6%9E%84%E6%8B%8D%E5%B9%B3%E4%B8%BA%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84.html","title":"将树结构拍平为一维数组","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/js类/树类/将树结构拍平为一维数组.md"}');export{o as comp,u as data};
