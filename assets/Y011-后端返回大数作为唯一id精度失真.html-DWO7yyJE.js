import{_ as s,c as a,a as p,o as e}from"./app-D8HvJIFE.js";const t={};function o(l,n){return e(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="y011-后端返回大数作为唯一id精度失真" tabindex="-1"><a class="header-anchor" href="#y011-后端返回大数作为唯一id精度失真"><span>Y011-后端返回大数作为唯一id精度失真</span></a></h1><h2 id="后端返回大数作为唯一id精度失真问题" tabindex="-1"><a class="header-anchor" href="#后端返回大数作为唯一id精度失真问题"><span>后端返回大数作为唯一id精度失真问题</span></a></h2><p>response 返回的结果跟实际的不一致</p><p>最好是后端返回字符串类型</p><p>实在不行 可以在前端进行处理</p><h2 id="方案1-正则替换" tabindex="-1"><a class="header-anchor" href="#方案1-正则替换"><span>方案1：正则替换</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"></span>
<span class="line">如果我们使用的是axios请求数据，Axios 提供了自定义处理原始后端返回数据的 <span class="token constant">API</span>：transformResponse <span class="token punctuation">,</span> 可以这样处理：</span>
<span class="line"><span class="token function">复制代码axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  </span>
<span class="line"><span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>  </span>
<span class="line"><span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>  </span>
<span class="line"><span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>  </span>
<span class="line"><span class="token literal-property property">transformResponse</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token comment">// 将Long类型数据转换为字符串</span></span>
<span class="line">    <span class="token keyword">const</span> convertedJsonString <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&quot;(\\w+)&quot;:(\\d{15,})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&quot;$1&quot;:&quot;$2&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>convertedJsonString<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  </span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 假设后端返回的JSON数据如下：</span></span>
<span class="line"><span class="token keyword">const</span> responseData <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">12345678901234567890</span><span class="token punctuation">,</span> <span class="token comment">// 这是一个Long类型数据</span></span>
<span class="line">  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 处理过的json数据</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这将输出字符串：&quot;12345678901234567890&quot;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> responseData<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这将输出 &quot;string&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方案2-我们可以借助json-bigint这个第三方包来处理。" tabindex="-1"><a class="header-anchor" href="#方案2-我们可以借助json-bigint这个第三方包来处理。"><span>方案2：我们可以借助json-bigint这个第三方包来处理。</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> JSONbig <span class="token keyword">from</span> <span class="token string">&quot;json-bigint&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  </span>
<span class="line">    <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token literal-property property">url</span><span class="token operator">:</span> url<span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token literal-property property">transformResponse</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  </span>
<span class="line"><span class="token operator">+</span>        <span class="token keyword">const</span> JSONbigToString <span class="token operator">=</span> <span class="token function">JSONbig</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">storeAsString</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">+</span>          <span class="token comment">// 将Long类型数据转换为字符串</span></span>
<span class="line"><span class="token operator">+</span>          <span class="token keyword">return</span> JSONbigToString<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  </span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 假设后端返回的JSON数据如下：</span></span>
<span class="line">    <span class="token keyword">const</span> responseData <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">12345678901234567890</span><span class="token punctuation">,</span> <span class="token comment">// 这是一个Long类型数据</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 处理过的json数据</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>responseData<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这将输出字符串：&quot;12345678901234567890&quot;</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> responseData<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这将输出 &quot;string&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)])])}const i=s(t,[["render",o]]),r=JSON.parse('{"path":"/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/js%E7%B1%BB/%E8%BF%90%E7%AE%97%E7%B1%BB/Y011-%E5%90%8E%E7%AB%AF%E8%BF%94%E5%9B%9E%E5%A4%A7%E6%95%B0%E4%BD%9C%E4%B8%BA%E5%94%AF%E4%B8%80id%E7%B2%BE%E5%BA%A6%E5%A4%B1%E7%9C%9F.html","title":"Y011-后端返回大数作为唯一id精度失真","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"前端面试/js类/运算类/Y011-后端返回大数作为唯一id精度失真.md"}');export{i as comp,r as data};
