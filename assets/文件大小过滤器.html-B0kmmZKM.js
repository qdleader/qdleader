import{_ as s,c as a,a as t,o as p}from"./app-D8HvJIFE.js";const o={};function e(c,n){return p(),a("div",null,[...n[0]||(n[0]=[t(`<h1 id="文件大小过滤器" tabindex="-1"><a class="header-anchor" href="#文件大小过滤器"><span>文件大小过滤器</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&quot;transformByte&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bytes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>bytes <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> bytes <span class="token operator">===</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&quot;0 B&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bytes<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> sizes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;KB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ZB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;YB&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span>bytes <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> sizes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">Vue<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">&quot;limitChar&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> num<span class="token punctuation">,</span> suffix</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>str <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span> <span class="token operator">+</span> suffix <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> str <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)])])}const u=s(o,[["render",e]]),i=JSON.parse('{"path":"/vue/%E8%BF%87%E6%BB%A4%E5%99%A8/%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E8%BF%87%E6%BB%A4%E5%99%A8.html","title":"文件大小过滤器","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"vue/过滤器/文件大小过滤器.md"}');export{u as comp,i as data};
