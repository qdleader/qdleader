import{_ as n,c as a,a as e,o as t}from"./app-D8HvJIFE.js";const p={};function c(i,s){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="subscribe的使用" tabindex="-1"><a class="header-anchor" href="#subscribe的使用"><span>$subscribe的使用</span></a></h1><p>监听state状态变化 订阅state的值：你可以通过store的$subscribe()方法去观察state的改变，类似于subscribe方法。与常规watch()相比，使用$subscribe()的优势在于，在补丁发布后，订阅只会触发一次。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">numerStore<span class="token punctuation">.</span><span class="token function">$subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">mutation<span class="token punctuation">,</span>state</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  mutation<span class="token punctuation">.</span>counter</span>
<span class="line">  mutation<span class="token punctuation">.</span>name</span>
<span class="line">  mutation<span class="token punctuation">.</span>isAdmin</span>
<span class="line">  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&quot;numer&quot;</span><span class="token punctuation">,</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下，状态订阅被绑定到添加它们的组件上(如果存储在组件的setup()中)。这就以为着当组件被卸载的时候，将自动移除。如果你想再组件被移除后继续保持它们，可以通过设置{detached:true}作为第二个参数来从当前组件中分离状态订阅。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">const</span> someStore <span class="token operator">=</span> <span class="token function">useSomeStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">someStore<span class="token punctuation">.</span><span class="token function">$subscribe</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">detached</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,5)])])}const l=n(p,[["render",c]]),u=JSON.parse('{"path":"/vue3/pinia/subscribe%E7%9A%84%E4%BD%BF%E7%94%A8.html","title":"$subscribe的使用","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1761877037000,"contributors":[{"name":"qdleader","username":"qdleader","email":"yk4545945@163.com","commits":1,"url":"https://github.com/qdleader"}],"changelog":[{"hash":"bd7640b59685e94edda53b9f6d34fbec27933dd4","time":1761877037000,"email":"yk4545945@163.com","author":"qdleader","message":"docs: 更新仓库链接和添加交流社区信息"}]},"filePathRelative":"vue3/pinia/$subscribe的使用.md"}');export{l as comp,u as data};
